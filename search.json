[{"path":"http://christophertkenny.com/bskyr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 bskyr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://christophertkenny.com/bskyr/articles/creating_records.html","id":"creating-a-new-post","dir":"Articles","previous_headings":"","what":"Creating a New Post","title":"Creating Records on Bluesky Social","text":"create new text post Bluesky, use bs_post() function. minimum, provide content post via text argument. function creates feed post record Bluesky account (using app.bsky.feed.post lexicon hood). returns tibble details created post, including unique URI metadata. example, ’s create simple text-post: function called, post given text Bluesky feed. result (assigned) contains post’s URI CID (content ID). may want save result (e.g., variable) plan reference delete post later.","code":"bs_post(text = '[vignette] This is a post from R using `bskyr` on Creating Records.')"},{"path":"http://christophertkenny.com/bskyr/articles/creating_records.html","id":"creating-a-post-with-a-quote","dir":"Articles","previous_headings":"","what":"Creating a Post with a Quote","title":"Creating Records on Bluesky Social","text":"Bluesky allows quote another post (similar quoting tweet, share someone’s post commentary). create quote post, use quote argument bs_post(). supply URI web link post want quote. bskyr embed referenced post new post record (hood uses app.bsky.embed.record schema quoted record). example, quote another user’s post adding text: Simply include post ID quote post want quote. bs_post() call create new post containing text quote referenced post. can use either https://bsky.app/profile/.... URL shown, equivalent Protocol URI ://... post. function handle appropriately.","code":"bs_post(   text = '[vignette] This is a quote from R using `bskyr` on Creating Records',   quote = 'https://bsky.app/profile/bskyr.bsky.social/post/3lpem3br3qn2z' )"},{"path":"http://christophertkenny.com/bskyr/articles/creating_records.html","id":"posting-with-media-and-links","dir":"Articles","previous_headings":"","what":"Posting with Media and Links","title":"Creating Records on Bluesky Social","text":"Bluesky posts can include media link previews addition text. bs_post() function makes easy attach : Images: can attach four images post using images argument. Provide character vector file paths images. ’s recommended also provide descriptive alt text image via images_alt argument, character vector length images. images uploaded embedded post (using app.bsky.embed.images lexicon). External links: post text contains URL, bs_post() default attempt embed preview card link (using app.bsky.embed.external lexicon). means can include external URL text Bluesky may display link preview supported clients. example, create post image attached: snippet, image located \"help/figures/logo.png\" within bskyr uploaded attached post, alt text describing image. can list multiple image file paths images (4) provide corresponding alt text entry images_alt. example post includes external link text: posting, URL (https://example.com case) present text, bs_post() attempt add embedded link preview. Bluesky, creates card link’s title, description, thumbnail (available) post. exact appearance may depend client app, underlying record include app.bsky.embed.external embed URL.","code":"bs_post(   text = '[vignette] This is a post with an image from R using `bskyr` on Creating Records',   images = system.file('help/figures/logo.png', package = 'bskyr'),   images_alt = 'A hexagon logo for bskyr with the letters \"bskyr\" on a cloud' ) bs_post(   text = '[vignette] This is a post with a link from R using `bskyr` on Creating Records. Check out the package at https://christophertkenny.com/bskyr/.', )"},{"path":"http://christophertkenny.com/bskyr/articles/creating_records.html","id":"replying-to-a-post","dir":"Articles","previous_headings":"","what":"Replying to a Post","title":"Creating Records on Bluesky Social","text":"Replying post straightforward using bskyr. reply essentially new post linked existing post parent. reply specific post, use reply argument bs_post() provide URI link post want reply . bs_post() function create new post record references given post parent (setting appropriate reply thread reference app.bsky.feed.post record). example, reply someone’s post: call create post text, threaded reply specified post. Bluesky, new post appear response conversation thread original post. Note: ’s possible use reply quote simultaneously single bs_post() call want quote post replying . case, new post reply thread include quoted embed target post.","code":"bs_post(   text  = '[vignette] This is a reply from R using `bskyr` on Creating Records',   reply = 'https://bsky.app/profile/bskyr.bsky.social/post/3lpemxzni4l2m' )"},{"path":"http://christophertkenny.com/bskyr/articles/creating_records.html","id":"liking-a-post","dir":"Articles","previous_headings":"","what":"Liking a Post","title":"Creating Records on Bluesky Social","text":"Liking post Bluesky creates “like” record account (defined app.bsky.feed.like lexicon). Using bskyr, can like post function bs_like(). function record liked given post. like post, need specify post like. bs_like() function accepts post argument can provide post’s URI web URL. convenience, can pass kind link use quoting replying. example, like particular post: create like record post. function returns tibble information new like (including URI, since like record repository). visible effect output, Bluesky target post now show liked account.","code":"bs_like(post = 'https://bsky.app/profile/chriskenny.bsky.social/post/3lktjjvxvdk2g')"},{"path":"http://christophertkenny.com/bskyr/articles/creating_records.html","id":"reposting-a-post","dir":"Articles","previous_headings":"","what":"Reposting a Post","title":"Creating Records on Bluesky Social","text":"Reposting action creates repost record (using app.bsky.feed.repost lexicon). repost indicates sharing someone else’s post feed without adding additional text . repost post via bskyr, use bs_repost() function. Provide target post’s URI URL argument, bs_repost() create repost record account. example, repost given post: call create repost record post. function returns tibble details repost. Bluesky, effect original post appear feed repost .","code":"bs_repost(post = 'https://bsky.app/profile/chriskenny.bsky.social/post/3lktjjvxvdk2g')"},{"path":"http://christophertkenny.com/bskyr/articles/creating_records.html","id":"deleting-content-posts-likes-and-reposts","dir":"Articles","previous_headings":"","what":"Deleting Content (Posts, Likes, and Reposts)","title":"Creating Records on Bluesky Social","text":"posts interactions create stored records Bluesky repository, can deleted needed. bskyr provides convenience functions delete records: Deleting post: use bs_delete_post(). Deleting like: use bs_delete_like() (un-likes post). Deleting repost: use bs_delete_repost() (removes repost feed). functions requires record’s unique key (often called record key rkey) identify record delete. original object returned created record, can extract key using bs_extract_record_key() record’s URI. example, saved post object post creating , can delete like : example, post$uri contains full URI new post record, bs_extract_record_key() pulls record’s key URI. pass key bs_delete_post() delete post. 200 displayed HTTP status code indicating success. Similarly, saved like repost: pattern : object returned bs_like() bs_repost() uri field, using bs_extract_record_key() gives identifier needed delete record via appropriate delete function. Note: hood, deletion functions wrappers around bs_delete_record(). call bs_delete_record(collection, rkey, ...) directly specifying record’s collection NSID (e.g., 'app.bsky.feed.post' post) record key. specialized functions (bs_delete_post(), bs_delete_like(), etc.) simply provide convenient shorthand respective record types. example, suppose want create post calling bs_create_record() directly, instead using bs_post(). need use app.bsky.feed.post collection provide record required fields (least text timestamp):","code":"post <- bs_post(text = '[vignette] This is a post to be deleted from R using `bskyr` on Creating Records.') bs_delete_post(bs_extract_record_key(post$uri)) liked <- bs_like(post = 'https://bsky.app/profile/bskyr.bsky.social/post/3lpemxzni4l2m') reposted <- bs_repost(post = 'https://bsky.app/profile/bskyr.bsky.social/post/3lpemxzni4l2m')  bs_delete_like(bs_extract_record_key(liked$uri)) bs_delete_repost(bs_extract_record_key(reposted$uri))"},{"path":"http://christophertkenny.com/bskyr/articles/creating_records.html","id":"advanced-using-bs_create_record","dir":"Articles","previous_headings":"","what":"Advanced: Using bs_create_record()","title":"Creating Records on Bluesky Social","text":"may noticed, everything vignette centers around records. Posting, liking, quoting, etc. ways creating records Bluesky repository. Deleting simply removing records. advanced use cases, bskyr offers low-level interface bs_create_record() can create arbitrary record repo, given correct parameters. function essentially direct wrapper around Protocol endpoint creating records (com.atproto.repo.createRecord). requires specify collection (lexicon NSID record type) record list contains fields defined record’s lexicon. users need call bs_create_record() directly, since higher-level functions like bs_post(), bs_like(), etc., construct appropriate record . However, need create record type bskyr doesn’t yet helper , want fine-grained control, bs_create_record() tool use. Keep mind must follow lexicon’s schema exactly constructing record list. constructed list post_record text field post content createdAt field. used helper function bs_created_at() generate current timestamp format Bluesky lexicon expects. Passing bs_create_record() appropriate collection create new post record identical one created bs_post(). return value tibble details created record (including URI CID). another example, one manually create like record bs_create_record() (though normally use bs_like()). app.bsky.feed.like lexicon expects subject (post liked, identified URI CID) timestamp. post_rcd post object fetched details , : illustrates must supply necessary fields (case, post’s identifiers timestamp) create record. practice, using bs_like(post = ...) much simpler, bs_create_record() gives flexibility craft requests record type long know required schema.","code":"post_record <- list(   text = '[vignette] Posting via bs_create_record()',   createdAt = bs_created_at() ) bs_create_record(collection = 'app.bsky.feed.post', record = post_record) post_rcd <- bs_get_record(   'https://bsky.app/profile/bskyr.bsky.social/post/3lpeonujcdg2q',    clean = FALSE )  like_record <- list(   subject = list(     uri = post_rcd$uri,     cid = post_rcd$cid   ),   createdAt = bs_created_at() ) bs_create_record(collection = 'app.bsky.feed.like', record = like_record)"},{"path":"http://christophertkenny.com/bskyr/articles/creating_records.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Creating Records on Bluesky Social","text":"bskyr package enables programmatic interaction Bluesky Social creating managing records underpin Bluesky protocol. covered make posts (text, quotes, media, links) interact others’ posts replies, likes, reposts. also demonstrated delete content touched advanced bs_create_record() interface custom record creation. tools, can integrate Bluesky Social R workflows, bots, analyses, taking full advantage Protocol’s openness convenience tidyverse-style functions. DISCLAIMER: vignette written help ChatGPT 4o. reviewed correctness edited clarity package author. Please note issues https://github.com/christopherkenny/bskyr/issues.","code":""},{"path":"http://christophertkenny.com/bskyr/articles/gathering_data.html","id":"setup-and-authentication","dir":"Articles","previous_headings":"","what":"Setup and Authentication","title":"Gathering Data from Bluesky Social","text":"Begin loading bskyr package: gathering data, need authenticate Bluesky. (requires Bluesky account creating App Password account settings.) vignette, assume already set Bluesky username App Password via set_bluesky_user() set_bluesky_pass() (storing .Renviron). , can create authenticated session :. authentication used internally functions, though explicitly creating session beginning script recommended avoid repeated logins. Note necessary every function call, authentication automatically cached session refreshed gets stale.","code":"library(bskyr) auth <- bs_auth(user = bs_get_user(), pass = bs_get_pass())"},{"path":"http://christophertkenny.com/bskyr/articles/gathering_data.html","id":"working-with-your-own-data","dir":"Articles","previous_headings":"","what":"Working with your own data","title":"Gathering Data from Bluesky Social","text":"Bluesky’s API distinguishes data can access account versus public data others. endpoints allow fetching personal data (managing account) users’. example, can retrieve preferences bs_get_preferences(), retrieve another user’s preferences. Similarly, can get list blocks mutes, notifications. . instance, fetch current preference settings (content filtering preferences): self-focused functions include retrieving blocked accounts (bs_get_blocks()), muted lists (bs_get_muted_lists()), notifications (bs_get_notifications()). functions correspond lexicons app.bsky.notification.* app.bsky.graph.* namespaces, return data authenticated user. . remainder vignette, ’ll focus gathering public data users content Bluesky. data accessible via Bluesky API (authentication), provided information public.","code":"bs_get_preferences()"},{"path":"http://christophertkenny.com/bskyr/articles/gathering_data.html","id":"public-data-about-other-users","dir":"Articles","previous_headings":"","what":"Public Data about Other Users","title":"Gathering Data from Bluesky Social","text":"bskyr functions designed gather data users content ’ve created. demonstrate using sample account: chriskenny.bsky.social. (Bluesky handle bskyr package author, Christopher T. Kenny.) Using account example, ’ll show retrieve various types information:. Profile information (user metadata) User feeds / posts (content posted) Threads replies (conversation threads involving user’s posts) Followers follows (user’s social graph) Likes interactions (posts user liked, liked user’s posts) subsection focuses one data types, example code notes relevant lexicons.","code":""},{"path":"http://christophertkenny.com/bskyr/articles/gathering_data.html","id":"accessing-profile-information","dir":"Articles","previous_headings":"","what":"Accessing Profile Information","title":"Gathering Data from Bluesky Social","text":"basic starting point retrieving user’s profile. bs_get_profile() function queries app.bsky.actor.getProfile lexicon fetch profile details one users. example, get profile chriskenny.bsky.social, use bs_get_profile(). returns metadata user’s handle, display name, description, follower counts. retrieve multiple profiles:.","code":"profile <- bs_get_profile('chriskenny.bsky.social') profile bs_get_profile(actors = c('chriskenny.bsky.social', 'simko.bsky.social'))"},{"path":"http://christophertkenny.com/bskyr/articles/gathering_data.html","id":"gathering-posts-from-a-user","dir":"Articles","previous_headings":"","what":"Gathering Posts from a User","title":"Gathering Data from Bluesky Social","text":"access posts authored user, use bs_get_author_feed(), queries app.bsky.feed.getAuthorFeed lexicon: row feed tibble represents post made user. Key columns include post content (text), number likes replies, potentially metadata like repost count, timestamps (created_at), unique post IDs (uri cid). default, bs_get_author_feed() returns recent batch posts (Bluesky API typically returns 50 time). . user posts, cursor returned can used paginate:","code":"feed <- bs_get_author_feed('chriskenny.bsky.social') feed |>   dplyr::select(uri, like_count, reply_count) more_posts <- bs_get_author_feed('chriskenny.bsky.social', cursor = attr(feed, 'cursor')$cursor)"},{"path":"http://christophertkenny.com/bskyr/articles/gathering_data.html","id":"retrieving-threads-and-replies","dir":"Articles","previous_headings":"","what":"Retrieving Threads and Replies","title":"Gathering Data from Bluesky Social","text":"Social interactions Bluesky often happen threads: post replies (replies replies, ). bskyr package provides tools retrieve entire conversation threads can analyze context post. . get full thread particular post, use bs_get_post_thread(). function calls app.bsky.feed.getPostThread lexicon, returns specified post, ancestors (reply ), replies (replies replies, specified depth). words, fetches whole conversation tree. . Suppose specific post want examine context. know post’s URI URL, can retrieve thread. example, using post URL (might copy Bluesky app web):. returns conversation context around specific post. post URI known, bs_get_posts() can used retrieve directly:.","code":"thread <- bs_get_post_thread('at://did:plc:ic6zqvuw5ulmfpjiwnhsr2ns/app.bsky.feed.post/3k7qmjev5lr2s') thread post <- bs_get_posts('https://bsky.app/profile/chriskenny.bsky.social/post/3loagm2phgk2t') post$record[[1]] |>   dplyr::select(`$type`, text, created_at)"},{"path":"http://christophertkenny.com/bskyr/articles/gathering_data.html","id":"accessing-social-graph-data","dir":"Articles","previous_headings":"","what":"Accessing Social Graph Data","title":"Gathering Data from Bluesky Social","text":"Bluesky, like social platforms, allows users follow . app.bsky.graph.* lexicons provide access social graph. bskyr, can list user’s followers user following (“follows”) dedicated functions. bs_get_followers(): retrieves accounts follow given user. bs_get_follows(): retrieves accounts given user following. functions query corresponding lexicons app.bsky.graph.getFollowers app.bsky.graph.getFollows return tibbles user profiles. . example, get followers chriskenny.bsky.social: row represents one follower, including handle, display name, bio (description). followers tibble may also include follower’s possibly counts mutual follow info (e.g., whether follow , authenticated). default, certain number followers returned (Bluesky’s API uses pagination via cursors well). user lot followers, can use cursor limit arguments bs_get_followers() page results. . Similarly, get list accounts chriskenny.bsky.social follows (“following” list): returns tibble users following. structure followers (row user profile). , instance, compare two lists find overlaps, combine analyze mutual connections. functions rely Bluesky graph endpoints great mapping network around user.","code":"followers <- bs_get_followers('chriskenny.bsky.social') followers follows <- bs_get_follows('chriskenny.bsky.social') follows"},{"path":"http://christophertkenny.com/bskyr/articles/gathering_data.html","id":"likes-and-reposts","dir":"Articles","previous_headings":"","what":"Likes and Reposts","title":"Gathering Data from Bluesky Social","text":"Finally, let’s look gather data post interactions like likes (similarly, reposts). Bluesky treats likes reposts separate record types, API provides endpoints query . Posts liked user: fetch posts given user liked (content “Likes” tab profile), use bs_get_likes(). function hits app.bsky.feed.getActorLikes lexicon returns tibble posts. Essentially, ’s reverse bs_get_author_feed(), instead posts user authored, gives posts user liked. example:. row post liked chriskenny.bsky.social, showing author post (author.handle) post content (text). full data frame also include details like post’s URI, timestamps, engagement counts. great way retrieve user’s liked content analysis (instance, see topics users engage ). . liked specific post: Conversely, want see users liked particular post, can use bs_get_post_likes(). corresponds app.bsky.feed.getLikes lexicon returns tibble actors. need specify post URI bsky.app URL. example, want find liked one posts (identified known URI):. return tibble users (handles, display names, etc.) liked post. ’s similar structure followers list saw earlier. examining , see audience engaging particular piece content. Reposts: Bluesky also concept “reposts” (analogous retweets), user rebroadcasts someone else’s post. get users reposted given post, can use bs_get_reposts(), calls app.bsky.feed.getRepostedBy endpoint. usage just like bs_get_post_likes(), provide post URI URL, returns tibble users reposted post. brevity, won’t show full example, works much way. give list accounts reposted specified post.","code":"liked_posts <- bs_get_likes('bskyr.bsky.social') liked_posts |>   dplyr::select(author_handle, record_text) bs_get_post_likes('at://did:plc:wpe35pganb6d4pg4ekmfy6u5/app.bsky.feed.post/3lnghukd7vk22') bs_get_reposts('at://did:plc:wpe35pganb6d4pg4ekmfy6u5/app.bsky.feed.post/3lnghukd7vk22')"},{"path":"http://christophertkenny.com/bskyr/articles/gathering_data.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Gathering Data from Bluesky Social","text":"combining functions, can gather rich set data Bluesky Social. instance, might collect user’s profile posts, fetch replies posts, list users follow , posts ’ve liked. opens many possibilities analysis: social network analysis (using follows data), content analysis (using posts threads), engagement analysis (using likes reposts). vignette, demonstrated use bskyr gather various types public data Bluesky Social network. covered retrieving user profiles, fetching user’s posts, exploring conversation threads, listing followers follows, accessing likes (interactions). tasks made possible Bluesky’s open Protocol lexicon-defined API endpoints, bskyr conveniently wraps R functions. . tools, R users can treat Bluesky data source research development. can pull data social connections, user behavior, content trends Bluesky apply vast ecosystem R packages data analysis visualization. Bluesky network grows API evolves, bskyr aim keep , providing efficient bridge Protocol R. DISCLAIMER: vignette written help ChatGPT 4o. reviewed correctness edited clarity package author. Please note issues https://github.com/christopherkenny/bskyr/issues.","code":""},{"path":"http://christophertkenny.com/bskyr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christopher T. Kenny. Author, maintainer.","code":""},{"path":"http://christophertkenny.com/bskyr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kenny C (2024). bskyr: Interact Bluesky Social. R package, https://christophertkenny.com/bskyr/.","code":"@Manual{bskyr,   title = {{bskyr}: Interact with Bluesky Social},   author = {Christopher T. Kenny},   year = {2024},   note = {R package},   url = {https://christophertkenny.com/bskyr/}, }"},{"path":"http://christophertkenny.com/bskyr/index.html","id":"bskyr-","dir":"","previous_headings":"","what":"Interact with Bluesky Social","title":"Interact with Bluesky Social","text":"bskyr provides interface Bluesky Social API, allowing interact Bluesky Social R. , provide functions match Protocol’s Lexicon, like using regular HTTP requests. Outputs bskyr’s functions primarily tibbles, allowing easy analysis outputs API calls.","code":""},{"path":"http://christophertkenny.com/bskyr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interact with Bluesky Social","text":"can install stable version bskyr CRAN : can install development version bskyr GitHub :","code":"install.packages('bskyr') # install.packages('pak') pak::pak('christopherkenny/bskyr')"},{"path":"http://christophertkenny.com/bskyr/index.html","id":"posting-with-bskyr","dir":"","previous_headings":"","what":"Posting with bskyr","title":"Interact with Bluesky Social","text":"First, load package: Text posts can made follows: images include, four can included images argument: Alt text can added images images_alt argument: quote reply post, use quote /reply argument, respectively. can take link existing post. can quote reply post, want. See reference additional features, including likes bs_like() reposts bs_repost().","code":"library(bskyr) bs_post(text = 'Your text goes here.') bs_post(   text = 'Your text goes here.',    images = c('path/to/image1.jpg', 'path/to/image2.png') ) bs_post(   text = 'Your text goes here.',    images = c('path/to/image1.jpg', 'path/to/image2.png'),    images_alt = c('Alt text for image 1', 'Alt text for image 2') ) bs_post(   text = 'Your text goes here.',    quote = 'https://bsky.app/profile/chriskenny.bsky.social/post/3kepscxiljc22',   reply = 'https://bsky.app/profile/chriskenny.bsky.social/post/3kepscxiljc22' )"},{"path":"http://christophertkenny.com/bskyr/index.html","id":"authentication","dir":"","previous_headings":"","what":"Authentication","title":"Interact with Bluesky Social","text":"authenticate, first need make App Password. , go https://bsky.app/settings. “Advanced” click App passwords “Add App Password.” password, need run: want persist across sessions, set install = TRUE r_env = file.path(Sys.getenv('HOME'), '.Renviron'). save credentials R environment file. Alternatively, can set manually using usethis::edit_r_environ() adding lines like :","code":"set_bluesky_user('YOUR-USERNAME.bsky.social') set_bluesky_pass('your-apps-pass-word') BLUESKY_APP_USER='YOUR-USERNAME.bsky.social' BLUESKY_APP_PASS='your-apps-pass-word'"},{"path":[]},{"path":"http://christophertkenny.com/bskyr/reference/bs_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Authenticate a user — bs_auth","title":"Authenticate a user — bs_auth","text":"Authenticate user","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authenticate a user — bs_auth","text":"","code":"bs_auth(user, pass, save_auth = TRUE)"},{"path":"http://christophertkenny.com/bskyr/reference/bs_auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authenticate a user — bs_auth","text":"user Character. User name log . pass Character. App password log . save_auth Logical. authentication information saved? TRUE, tries reload cache. file 10 minutes old, read. Set save_auth = NULL force token refresh save results.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_auth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Authenticate a user — bs_auth","text":"list authentication information","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_auth.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Authenticate a user — bs_auth","text":"server/createSession.json (2023-09-30)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_auth.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Authenticate a user — bs_auth","text":"v0.0.1 (2023-09-30)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_auth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Authenticate a user — bs_auth","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_auth(user = get_bluesky_user(), pass = get_bluesky_pass()) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Block an account — bs_block","title":"Block an account — bs_block","text":"Block account","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Block an account — bs_block","text":"","code":"bs_block(   subject,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Block an account — bs_block","text":"subject Character, length 1. Subject act , handle . user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Block an account — bs_block","text":"tibble::tibble follow information","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_block.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Block an account — bs_block","text":"graph/block.json (2024-12-03) repo/createRecord.json (2024-12-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_block.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Block an account — bs_block","text":"v0.2.0 (2024-12-03)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_block.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Block an account — bs_block","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_block(subject = 'nytimes.com') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_create_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a record in a repo — bs_create_record","title":"Create a record in a repo — bs_create_record","text":"Create record repo","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_create_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a record in a repo — bs_create_record","text":"","code":"bs_create_record(   collection,   record,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_create_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a record in a repo — bs_create_record","text":"collection Character, length 1. NSID record collection. record List, length 1. Description record. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_create_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a record in a repo — bs_create_record","text":"tibble::tibble record information","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_create_record.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Create a record in a repo — bs_create_record","text":"repo/createRecord.json (2023-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_create_record.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Create a record in a repo — bs_create_record","text":"v0.1.0 (2023-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_create_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a record in a repo — bs_create_record","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() # get info about a record post_rcd <- bs_get_record('https://bsky.app/profile/bskyr.bsky.social/post/3kf2577exva2x') # create a record, to like the post like <- list(   subject = list(     uri = post_rcd$uri,     cid = post_rcd$cid   ),   createdAt = bs_created_at() )  bs_create_record(collection = 'app.bsky.feed.like', record = like) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_created_at.html","id":null,"dir":"Reference","previous_headings":"","what":"Get current time in Bluesky format — bs_created_at","title":"Get current time in Bluesky format — bs_created_at","text":"Get current time Bluesky format","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_created_at.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get current time in Bluesky format — bs_created_at","text":"","code":"bs_created_at()"},{"path":"http://christophertkenny.com/bskyr/reference/bs_created_at.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get current time in Bluesky format — bs_created_at","text":"length 1 character vector","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_created_at.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get current time in Bluesky format — bs_created_at","text":"v0.1.0 (2023-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_created_at.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get current time in Bluesky format — bs_created_at","text":"","code":"bs_created_at() #> [1] \"2025-05-17T16:05:00.444046Z\""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a block — bs_delete_block","title":"Delete a block — bs_delete_block","text":"Delete block","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a block — bs_delete_block","text":"","code":"bs_delete_block(   rkey,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass) )  bs_unblock(   rkey,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass) )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a block — bs_delete_block","text":"rkey Character, length 1. CID version record. specified, return recent version. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass).","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a block — bs_delete_block","text":"httr2 status code","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_block.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Delete a block — bs_delete_block","text":"graph/list.json (2024-12-03) repo/deleteRecord.json (2024-12-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_block.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Delete a block — bs_delete_block","text":"v0.2.0 (2024-12-03)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_block.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete a block — bs_delete_block","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() blck <- bs_block(subject = 'nytimes.com') bs_delete_block(bs_extract_record_key(blck$uri)) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_follow.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a follow (un-follow someone) — bs_delete_follow","title":"Delete a follow (un-follow someone) — bs_delete_follow","text":"Delete follow (un-follow someone)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_follow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a follow (un-follow someone) — bs_delete_follow","text":"","code":"bs_delete_follow(   rkey,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass) )  bs_unfollow(   rkey,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass) )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_follow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a follow (un-follow someone) — bs_delete_follow","text":"rkey Character, length 1. CID version record. specified, return recent version. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass).","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_follow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a follow (un-follow someone) — bs_delete_follow","text":"httr2 status code","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_follow.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Delete a follow (un-follow someone) — bs_delete_follow","text":"graph/list.json (2024-12-03) repo/deleteRecord.json (2024-12-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_follow.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Delete a follow (un-follow someone) — bs_delete_follow","text":"v0.2.0 (2024-12-03)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_follow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete a follow (un-follow someone) — bs_delete_follow","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() foll <- bs_follow(subject = 'chriskenny.bsky.social') bs_delete_follow(bs_extract_record_key(foll$uri)) # obviously, you deleted this by mistake and want to follow me foll <- bs_follow(subject = 'chriskenny.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_like.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a like (un-like something) — bs_delete_like","title":"Delete a like (un-like something) — bs_delete_like","text":"Delete like (un-like something)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_like.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a like (un-like something) — bs_delete_like","text":"","code":"bs_delete_like(   rkey,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass) )  bs_unlike(   rkey,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass) )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_like.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a like (un-like something) — bs_delete_like","text":"rkey Character, length 1. CID version record. specified, return recent version. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass).","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_like.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a like (un-like something) — bs_delete_like","text":"httr2 status code","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_like.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Delete a like (un-like something) — bs_delete_like","text":"graph/list.json (2024-12-03) repo/deleteRecord.json (2024-12-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_like.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Delete a like (un-like something) — bs_delete_like","text":"v0.2.0 (2024-12-03)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_like.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete a like (un-like something) — bs_delete_like","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() like <- bs_like(post = 'https://bsky.app/profile/bskyr.bsky.social/post/3kf2577exva2x') bs_delete_like(bs_extract_record_key(like$uri)) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a list — bs_delete_list","title":"Delete a list — bs_delete_list","text":"Delete list","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a list — bs_delete_list","text":"","code":"bs_delete_list(   rkey,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass) )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a list — bs_delete_list","text":"rkey Character, length 1. CID version record. specified, return recent version. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass).","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a list — bs_delete_list","text":"httr2 status code","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_list.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Delete a list — bs_delete_list","text":"graph/list.json (2024-12-01) repo/deleteRecord.json (2024-12-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_list.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Delete a list — bs_delete_list","text":"v0.2.0 (2024-12-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete a list — bs_delete_list","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() lst <- bs_new_list(name = 'test list bskyr', purpose = 'curatelist') bs_delete_list(bs_extract_record_key(lst$uri)) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_list_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a list item — bs_delete_list_item","title":"Delete a list item — bs_delete_list_item","text":"Delete list item","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_list_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a list item — bs_delete_list_item","text":"","code":"bs_delete_list_item(   rkey,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass) )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_list_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a list item — bs_delete_list_item","text":"rkey Character, length 1. CID version record. specified, return recent version. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass).","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_list_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a list item — bs_delete_list_item","text":"httr2 status code","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_list_item.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Delete a list item — bs_delete_list_item","text":"graph/listitem.json (2024-12-01) repo/deleteRecord.json (2024-12-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_list_item.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Delete a list item — bs_delete_list_item","text":"v0.2.0 (2024-12-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_list_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete a list item — bs_delete_list_item","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() lst <- bs_new_list(name = 'test list bskyr', purpose = 'curatelist') itm <- bs_new_list_item(subject = 'bskyr.bsky.social', uri = lst$uri) bs_delete_list_item(bs_extract_record_key(itm$uri)) bs_delete_list(bs_extract_record_key(lst$uri)) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a post — bs_delete_post","title":"Delete a post — bs_delete_post","text":"Delete post","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a post — bs_delete_post","text":"","code":"bs_delete_post(   rkey,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass) )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a post — bs_delete_post","text":"rkey Character, length 1. CID version record. specified, return recent version. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass).","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a post — bs_delete_post","text":"httr2 status code","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_post.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Delete a post — bs_delete_post","text":"feed/post.json (2025-03-20) repo/deleteRecord.json (2025-03-20)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_post.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Delete a post — bs_delete_post","text":"v0.3.0 (2025-03-20)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_post.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete a post — bs_delete_post","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() pst <- bs_post('a test post to be deleted') bs_delete_post(bs_extract_record_key(pst$uri)) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a record in a repo — bs_delete_record","title":"Delete a record in a repo — bs_delete_record","text":"Delete record repo","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a record in a repo — bs_delete_record","text":"","code":"bs_delete_record(   collection,   rkey,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass) )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a record in a repo — bs_delete_record","text":"collection Character, length 1. NSID record collection. rkey Character, length 1. CID version record. specified, return recent version. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass).","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a record in a repo — bs_delete_record","text":"httr2 status code","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_record.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Delete a record in a repo — bs_delete_record","text":"repo/deleteRecord.json (2023-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_record.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Delete a record in a repo — bs_delete_record","text":"v0.1.0 (2023-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete a record in a repo — bs_delete_record","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() # get info about a record post_rcd <- bs_get_record('https://bsky.app/profile/bskyr.bsky.social/post/3kf2577exva2x') # create a record, to like the post like <- list(   subject = list(     uri = post_rcd$uri,     cid = post_rcd$cid   ),   createdAt = bs_created_at() )  rec <- bs_create_record(collection = 'app.bsky.feed.like', record = like) bs_delete_record(   collection = 'app.bsky.feed.like',   rkey = bs_extract_record_key(rec$uri) ) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_repost.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a repost — bs_delete_repost","title":"Delete a repost — bs_delete_repost","text":"Delete repost","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_repost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a repost — bs_delete_repost","text":"","code":"bs_delete_repost(   rkey,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass) )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_repost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a repost — bs_delete_repost","text":"rkey Character, length 1. CID version record. specified, return recent version. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass).","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_repost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a repost — bs_delete_repost","text":"httr2 status code","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_repost.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Delete a repost — bs_delete_repost","text":"feed/repost.json (2023-11-25) repo/deleteRecord.json (2024-12-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_repost.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Delete a repost — bs_delete_repost","text":"v0.2.0 (2024-12-03)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_repost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete a repost — bs_delete_repost","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() repo <- bs_repost('https://bsky.app/profile/bskyr.bsky.social/post/3kf2577exva2x') bs_delete_repost(bs_extract_record_key(repo$uri)) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_starter_pack.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a starter pack — bs_delete_starter_pack","title":"Delete a starter pack — bs_delete_starter_pack","text":"Delete starter pack","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_starter_pack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a starter pack — bs_delete_starter_pack","text":"","code":"bs_delete_starter_pack(   rkey,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass) )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_starter_pack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a starter pack — bs_delete_starter_pack","text":"rkey Character, length 1. CID version record. specified, return recent version. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass).","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_starter_pack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a starter pack — bs_delete_starter_pack","text":"httr2 status code","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_starter_pack.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Delete a starter pack — bs_delete_starter_pack","text":"graph/starterpack.json (2024-12-04) repo/deleteRecord.json (2024-12-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_starter_pack.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Delete a starter pack — bs_delete_starter_pack","text":"v0.2.0 (2024-12-04)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_delete_starter_pack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete a starter pack — bs_delete_starter_pack","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() starter <- bs_new_starter_pack('bskyr test') bs_delete_starter_pack(bs_extract_record_key(starter$uri)) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_describe_repo.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe a repo — bs_describe_repo","title":"Describe a repo — bs_describe_repo","text":"Describe repo","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_describe_repo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe a repo — bs_describe_repo","text":"","code":"bs_describe_repo(   repo,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_describe_repo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe a repo — bs_describe_repo","text":"repo Character, length 1. handle repo. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_describe_repo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe a repo — bs_describe_repo","text":"tibble::tibble record information","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_describe_repo.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Describe a repo — bs_describe_repo","text":"repo/describeRepo.json (2023-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_describe_repo.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Describe a repo — bs_describe_repo","text":"v0.1.0 (2023-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_describe_repo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe a repo — bs_describe_repo","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_describe_repo('chriskenny.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_extract_record_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Record Key from a link — bs_extract_record_key","title":"Extract Record Key from a link — bs_extract_record_key","text":"Extract Record Key link","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_extract_record_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Record Key from a link — bs_extract_record_key","text":"","code":"bs_extract_record_key(url)"},{"path":"http://christophertkenny.com/bskyr/reference/bs_extract_record_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Record Key from a link — bs_extract_record_key","text":"url Character, length 1. URL record get.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_extract_record_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Record Key from a link — bs_extract_record_key","text":"character vector record keys","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_extract_record_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Record Key from a link — bs_extract_record_key","text":"","code":"bs_extract_record_key('https://bsky.app/profile/chriskenny.bsky.social/post/3lc5d6zspys2c') #> [1] \"3lc5d6zspys2c\""},{"path":"http://christophertkenny.com/bskyr/reference/bs_follow.html","id":null,"dir":"Reference","previous_headings":"","what":"Follow an account — bs_follow","title":"Follow an account — bs_follow","text":"Follow account","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_follow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Follow an account — bs_follow","text":"","code":"bs_follow(   subject,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_follow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Follow an account — bs_follow","text":"subject Character, length 1. Subject act , handle . user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_follow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Follow an account — bs_follow","text":"tibble::tibble follow information","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_follow.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Follow an account — bs_follow","text":"graph/list.json (2024-12-02) repo/createRecord.json (2024-12-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_follow.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Follow an account — bs_follow","text":"v0.2.0 (2024-12-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_follow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Follow an account — bs_follow","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_follow(subject = 'chriskenny.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of lists that belong to an actor. — bs_get_actor_lists","title":"Get a list of lists that belong to an actor. — bs_get_actor_lists","text":"Get list lists belong actor.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of lists that belong to an actor. — bs_get_actor_lists","text":"","code":"bs_get_actor_lists(   actor,   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of lists that belong to an actor. — bs_get_actor_lists","text":"actor Character, length 1. name 1 actor, 'chriskenny.bsky.social' cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of lists that belong to an actor. — bs_get_actor_lists","text":"tibble::tibble lists","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_lists.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get a list of lists that belong to an actor. — bs_get_actor_lists","text":"graph/getLists.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_lists.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get a list of lists that belong to an actor. — bs_get_actor_lists","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_lists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of lists that belong to an actor. — bs_get_actor_lists","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_actor_lists('profmusgrave.bsky.social') bs_get_actor_lists('chriskenny.bsky.social') bs_get_actor_lists('pfrazee.com') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_starter_packs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get starter packs created by an actor — bs_get_actor_starter_packs","title":"Get starter packs created by an actor — bs_get_actor_starter_packs","text":"Get starter packs created actor","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_starter_packs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get starter packs created by an actor — bs_get_actor_starter_packs","text":"","code":"bs_get_actor_starter_packs(   actor,   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_starter_packs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get starter packs created by an actor — bs_get_actor_starter_packs","text":"actor Character, length 1. name 1 actor, 'chriskenny.bsky.social' cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 50, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_starter_packs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get starter packs created by an actor — bs_get_actor_starter_packs","text":"tibble::tibble starter packs","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_starter_packs.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get starter packs created by an actor — bs_get_actor_starter_packs","text":"graph/getActorStarterPacks.json (2024-11-20)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_starter_packs.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get starter packs created by an actor — bs_get_actor_starter_packs","text":"v0.2.0 (2024-11-20)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_starter_packs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get starter packs created by an actor — bs_get_actor_starter_packs","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_actor_starter_packs('chriskenny.bsky.social') bs_get_actor_starter_packs('pfrazee.com') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of actors suggested for following — bs_get_actor_suggestions","title":"Get a list of actors suggested for following — bs_get_actor_suggestions","text":"Get list actors suggested following","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of actors suggested for following — bs_get_actor_suggestions","text":"","code":"bs_get_actor_suggestions(   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_suggestions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of actors suggested for following — bs_get_actor_suggestions","text":"cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_suggestions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of actors suggested for following — bs_get_actor_suggestions","text":"tibble::tibble suggested accounts follow","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_suggestions.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get a list of actors suggested for following — bs_get_actor_suggestions","text":"actor/getSuggestions.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_suggestions.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get a list of actors suggested for following — bs_get_actor_suggestions","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_suggestions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of actors suggested for following — bs_get_actor_suggestions","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_get_actor_suggestions() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_author_feed.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve posts on an actor's feed — bs_get_author_feed","title":"Retrieve posts on an actor's feed — bs_get_author_feed","text":"Retrieve posts actor's feed","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_author_feed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve posts on an actor's feed — bs_get_author_feed","text":"","code":"bs_get_author_feed(   actor,   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_author_feed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve posts on an actor's feed — bs_get_author_feed","text":"actor Character, length 1. name 1 actor, 'chriskenny.bsky.social' cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_author_feed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve posts on an actor's feed — bs_get_author_feed","text":"tibble::tibble posts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_author_feed.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve posts on an actor's feed — bs_get_author_feed","text":"feed/getAuthorFeed.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_author_feed.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve posts on an actor's feed — bs_get_author_feed","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_author_feed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve posts on an actor's feed — bs_get_author_feed","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_author_feed('chriskenny.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocked_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a user's (self) muted lists — bs_get_blocked_lists","title":"Retrieve a user's (self) muted lists — bs_get_blocked_lists","text":"Retrieve user's (self) muted lists","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocked_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a user's (self) muted lists — bs_get_blocked_lists","text":"","code":"bs_get_blocked_lists(   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocked_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a user's (self) muted lists — bs_get_blocked_lists","text":"cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Maximum number request. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocked_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a user's (self) muted lists — bs_get_blocked_lists","text":"tibble::tibble actors","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocked_lists.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve a user's (self) muted lists — bs_get_blocked_lists","text":"graph/getListMutes.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocked_lists.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve a user's (self) muted lists — bs_get_blocked_lists","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocked_lists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a user's (self) muted lists — bs_get_blocked_lists","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_blocked_lists() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve user (self) blocks — bs_get_blocks","title":"Retrieve user (self) blocks — bs_get_blocks","text":"Retrieve user (self) blocks","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve user (self) blocks — bs_get_blocks","text":"","code":"bs_get_blocks(   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve user (self) blocks — bs_get_blocks","text":"cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve user (self) blocks — bs_get_blocks","text":"tibble::tibble blocked accounts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocks.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve user (self) blocks — bs_get_blocks","text":"graph/getBlocks.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocks.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve user (self) blocks — bs_get_blocks","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve user (self) blocks — bs_get_blocks","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_blocks() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed.html","id":null,"dir":"Reference","previous_headings":"","what":"Build feed from user's feed generator — bs_get_feed","title":"Build feed from user's feed generator — bs_get_feed","text":"Build feed user's feed generator","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build feed from user's feed generator — bs_get_feed","text":"","code":"bs_get_feed(   feed,   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build feed from user's feed generator — bs_get_feed","text":"feed Character, length 1. Feed get. cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build feed from user's feed generator — bs_get_feed","text":"tibble::tibble posts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Build feed from user's feed generator — bs_get_feed","text":"feed/getFeed.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Build feed from user's feed generator — bs_get_feed","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build feed from user's feed generator — bs_get_feed","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_feed('at://did:plc:z72i7hdynmk6r22z27h6tvur/app.bsky.feed.generator/bsky-team') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generator.html","id":null,"dir":"Reference","previous_headings":"","what":"Get specific information about one feed generator — bs_get_feed_generator","title":"Get specific information about one feed generator — bs_get_feed_generator","text":"Get specific information one feed generator","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get specific information about one feed generator — bs_get_feed_generator","text":"","code":"bs_get_feed_generator(   feed,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get specific information about one feed generator — bs_get_feed_generator","text":"feed Character, length 1. Feed get. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get specific information about one feed generator — bs_get_feed_generator","text":"tibble::tibble feeds","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generator.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get specific information about one feed generator — bs_get_feed_generator","text":"feed/getFeedGenerator.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generator.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get specific information about one feed generator — bs_get_feed_generator","text":"v0.0.1 (2023-10-01)","code":""},{"path":[]},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get specific information about one feed generator — bs_get_feed_generator","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_feed_generator('at://did:plc:z72i7hdynmk6r22z27h6tvur/app.bsky.feed.generator/bsky-team') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generators.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about a list of feed generators — bs_get_feed_generators","title":"Get information about a list of feed generators — bs_get_feed_generators","text":"Get information list feed generators","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about a list of feed generators — bs_get_feed_generators","text":"","code":"bs_get_feed_generators(   feeds,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about a list of feed generators — bs_get_feed_generators","text":"feeds Character. Vector feeds get. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information about a list of feed generators — bs_get_feed_generators","text":"tibble::tibble feeds","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generators.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get information about a list of feed generators — bs_get_feed_generators","text":"feed/getFeedGenerators.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generators.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get information about a list of feed generators — bs_get_feed_generators","text":"v0.0.1 (2023-10-01)","code":""},{"path":[]},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information about a list of feed generators — bs_get_feed_generators","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_feed_generators('at://did:plc:z72i7hdynmk6r22z27h6tvur/app.bsky.feed.generator/bsky-team') bs_get_feed_generators(c(   'at://did:plc:z72i7hdynmk6r22z27h6tvur/app.bsky.feed.generator/bsky-team',   'at://did:plc:z72i7hdynmk6r22z27h6tvur/app.bsky.feed.generator/whats-hot' )) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of feed suggestions — bs_get_feed_suggestions","title":"Get a list of feed suggestions — bs_get_feed_suggestions","text":"Get list feed suggestions","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of feed suggestions — bs_get_feed_suggestions","text":"","code":"bs_get_feed_suggestions(   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_suggestions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of feed suggestions — bs_get_feed_suggestions","text":"cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_suggestions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of feed suggestions — bs_get_feed_suggestions","text":"tibble::tibble suggested feeds","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_suggestions.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get a list of feed suggestions — bs_get_feed_suggestions","text":"feed/getSuggestedFeeds.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_suggestions.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get a list of feed suggestions — bs_get_feed_suggestions","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_suggestions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of feed suggestions — bs_get_feed_suggestions","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_get_feed_suggestions() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feeds.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a list of feeds created by a given actor — bs_get_feeds","title":"Retrieve a list of feeds created by a given actor — bs_get_feeds","text":"Retrieve list feeds created given actor","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feeds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a list of feeds created by a given actor — bs_get_feeds","text":"","code":"bs_get_feeds(   actor,   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feeds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a list of feeds created by a given actor — bs_get_feeds","text":"actor Character, length 1. name 1 actor, 'chriskenny.bsky.social' cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feeds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a list of feeds created by a given actor — bs_get_feeds","text":"tibble::tibble feeds","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feeds.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve a list of feeds created by a given actor — bs_get_feeds","text":"feed/getActorFeeds.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feeds.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve a list of feeds created by a given actor — bs_get_feeds","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feeds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a list of feeds created by a given actor — bs_get_feeds","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_feeds('chriskenny.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follow_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get suggested follows related to a given actor — bs_get_follow_suggestions","title":"Get suggested follows related to a given actor — bs_get_follow_suggestions","text":"Get suggested follows related given actor","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follow_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get suggested follows related to a given actor — bs_get_follow_suggestions","text":"","code":"bs_get_follow_suggestions(   actor,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follow_suggestions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get suggested follows related to a given actor — bs_get_follow_suggestions","text":"actor Character, length 1. name 1 actor, 'chriskenny.bsky.social' user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follow_suggestions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get suggested follows related to a given actor — bs_get_follow_suggestions","text":"tibble::tibble actors","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follow_suggestions.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get suggested follows related to a given actor — bs_get_follow_suggestions","text":"graph/getSuggestedFollowsByActor.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follow_suggestions.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get suggested follows related to a given actor — bs_get_follow_suggestions","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follow_suggestions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get suggested follows related to a given actor — bs_get_follow_suggestions","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_get_follow_suggestions('chriskenny.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_followers.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve an actor's followers — bs_get_followers","title":"Retrieve an actor's followers — bs_get_followers","text":"Retrieve actor's followers","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_followers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve an actor's followers — bs_get_followers","text":"","code":"bs_get_followers(   actor,   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_followers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve an actor's followers — bs_get_followers","text":"actor Character, length 1. name 1 actor, 'chriskenny.bsky.social' cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_followers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve an actor's followers — bs_get_followers","text":"tibble::tibble actors","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_followers.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve an actor's followers — bs_get_followers","text":"graph/getFollowers.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_followers.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve an actor's followers — bs_get_followers","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_followers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve an actor's followers — bs_get_followers","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_followers('chriskenny.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follows.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve an actor's follows — bs_get_follows","title":"Retrieve an actor's follows — bs_get_follows","text":"Retrieve actor's follows","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve an actor's follows — bs_get_follows","text":"","code":"bs_get_follows(   actor,   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve an actor's follows — bs_get_follows","text":"actor Character, length 1. name 1 actor, 'chriskenny.bsky.social' cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve an actor's follows — bs_get_follows","text":"tibble::tibble actors","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follows.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve an actor's follows — bs_get_follows","text":"graph/getFollows.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follows.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve an actor's follows — bs_get_follows","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve an actor's follows — bs_get_follows","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_follows('chriskenny.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_likes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve posts liked by an actor (self) — bs_get_likes","title":"Retrieve posts liked by an actor (self) — bs_get_likes","text":"Retrieve posts liked actor (self)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_likes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve posts liked by an actor (self) — bs_get_likes","text":"","code":"bs_get_likes(   actor,   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_likes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve posts liked by an actor (self) — bs_get_likes","text":"actor Character, length 1. name 1 actor, 'chriskenny.bsky.social' cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_likes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve posts liked by an actor (self) — bs_get_likes","text":"tibble::tibble likes","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_likes.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve posts liked by an actor (self) — bs_get_likes","text":"feed/getActorLikes.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_likes.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve posts liked by an actor (self) — bs_get_likes","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_likes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve posts liked by an actor (self) — bs_get_likes","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_likes(bs_get_user()) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a view of a list — bs_get_list","title":"Get a view of a list — bs_get_list","text":"Get view list","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a view of a list — bs_get_list","text":"","code":"bs_get_list(   list,   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a view of a list — bs_get_list","text":"list Character vector, length 1. Reference list record get. cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a view of a list — bs_get_list","text":"tibble::tibble lists","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_list.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get a view of a list — bs_get_list","text":"graph/getList.json (2025-03-20)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_list.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get a view of a list — bs_get_list","text":"v0.2.0 (2024-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a view of a list — bs_get_list","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_list('at://did:plc:ragtjsm2j2vknwkz3zp4oxrd/app.bsky.graph.list/3kmokjyuflk2g') bs_get_list('at://did:plc:hgyzg2hn6zxpqokmp5c2xrdo/app.bsky.graph.list/3laygnmmcfc2x') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_list_feed.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve recent posts from actors in a list — bs_get_list_feed","title":"Retrieve recent posts from actors in a list — bs_get_list_feed","text":"Retrieve recent posts actors list","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_list_feed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve recent posts from actors in a list — bs_get_list_feed","text":"","code":"bs_get_list_feed(   list,   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_list_feed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve recent posts from actors in a list — bs_get_list_feed","text":"list Character vector, length 1. Reference list record get. cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_list_feed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve recent posts from actors in a list — bs_get_list_feed","text":"tibble::tibble likes","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_list_feed.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve recent posts from actors in a list — bs_get_list_feed","text":"feed/getListFeed.json (2025-03-20)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_list_feed.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve recent posts from actors in a list — bs_get_list_feed","text":"v0.3.0 (2025-03-20)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_list_feed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve recent posts from actors in a list — bs_get_list_feed","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_list_feed('at://did:plc:ragtjsm2j2vknwkz3zp4oxrd/app.bsky.graph.list/3kmokjyuflk2g') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_muted_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a user's (self) muted lists — bs_get_muted_lists","title":"Retrieve a user's (self) muted lists — bs_get_muted_lists","text":"Retrieve user's (self) muted lists","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_muted_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a user's (self) muted lists — bs_get_muted_lists","text":"","code":"bs_get_muted_lists(   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_muted_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a user's (self) muted lists — bs_get_muted_lists","text":"user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_muted_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a user's (self) muted lists — bs_get_muted_lists","text":"tibble::tibble actors","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_muted_lists.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve a user's (self) muted lists — bs_get_muted_lists","text":"graph/getListMutes.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_muted_lists.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve a user's (self) muted lists — bs_get_muted_lists","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_muted_lists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a user's (self) muted lists — bs_get_muted_lists","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_muted_lists() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_mutes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a user's (self) muted accounts — bs_get_mutes","title":"Retrieve a user's (self) muted accounts — bs_get_mutes","text":"Retrieve user's (self) muted accounts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_mutes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a user's (self) muted accounts — bs_get_mutes","text":"","code":"bs_get_mutes(   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_mutes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a user's (self) muted accounts — bs_get_mutes","text":"cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_mutes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a user's (self) muted accounts — bs_get_mutes","text":"tibble::tibble actors","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_mutes.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve a user's (self) muted accounts — bs_get_mutes","text":"graph/getMutes.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_mutes.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve a user's (self) muted accounts — bs_get_mutes","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_mutes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a user's (self) muted accounts — bs_get_mutes","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_mutes() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notification_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the user's (self) number of unread notifications — bs_get_notification_count","title":"Get the user's (self) number of unread notifications — bs_get_notification_count","text":"Get user's (self) number unread notifications","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notification_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the user's (self) number of unread notifications — bs_get_notification_count","text":"","code":"bs_get_notification_count(   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notification_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the user's (self) number of unread notifications — bs_get_notification_count","text":"user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notification_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the user's (self) number of unread notifications — bs_get_notification_count","text":"tibble single column row count","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notification_count.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get the user's (self) number of unread notifications — bs_get_notification_count","text":"notification/getUnreadCount.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notification_count.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get the user's (self) number of unread notifications — bs_get_notification_count","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notification_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the user's (self) number of unread notifications — bs_get_notification_count","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_get_notification_count() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notifications.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the user's (self) notifications — bs_get_notifications","title":"Get the user's (self) notifications — bs_get_notifications","text":"Get user's (self) notifications","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notifications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the user's (self) notifications — bs_get_notifications","text":"","code":"bs_get_notifications(   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notifications.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the user's (self) notifications — bs_get_notifications","text":"cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notifications.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the user's (self) notifications — bs_get_notifications","text":"tibble notifications","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notifications.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get the user's (self) notifications — bs_get_notifications","text":"notification/listNotifications.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notifications.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get the user's (self) notifications — bs_get_notifications","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notifications.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the user's (self) notifications — bs_get_notifications","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_get_notifications() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_likes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve likes on a post — bs_get_post_likes","title":"Retrieve likes on a post — bs_get_post_likes","text":"Retrieve likes post","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_likes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve likes on a post — bs_get_post_likes","text":"","code":"bs_get_post_likes(   uri,   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_likes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve likes on a post — bs_get_post_likes","text":"uri Character, length 1. URI post get. cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_likes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve likes on a post — bs_get_post_likes","text":"tibble::tibble likes","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_likes.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve likes on a post — bs_get_post_likes","text":"feed/getLikes.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_likes.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve likes on a post — bs_get_post_likes","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_likes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve likes on a post — bs_get_post_likes","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_post_likes('at://did:plc:ic6zqvuw5ulmfpjiwnhsr2ns/app.bsky.feed.post/3k7qmjev5lr2s') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_thread.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve thread of posts — bs_get_post_thread","title":"Retrieve thread of posts — bs_get_post_thread","text":"Retrieve thread posts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_thread.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve thread of posts — bs_get_post_thread","text":"","code":"bs_get_post_thread(   uri,   depth = NULL,   parent_height = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_thread.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve thread of posts — bs_get_post_thread","text":"uri Character, length 1. URI post get. depth Integer. Maximum depth request. Maximum: 1000 parent_height Integer. Maximum parent height request. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_thread.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve thread of posts — bs_get_post_thread","text":"tibble::tibble posts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_thread.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve thread of posts — bs_get_post_thread","text":"feed/getPostThread.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_thread.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve thread of posts — bs_get_post_thread","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_thread.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve thread of posts — bs_get_post_thread","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_post_thread('at://did:plc:ic6zqvuw5ulmfpjiwnhsr2ns/app.bsky.feed.post/3k7qmjev5lr2s') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_posts.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve thread of posts — bs_get_posts","title":"Retrieve thread of posts — bs_get_posts","text":"Retrieve thread posts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_posts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve thread of posts — bs_get_posts","text":"","code":"bs_get_posts(   uris,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_posts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve thread of posts — bs_get_posts","text":"uris Character. Vector URIs posts get. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_posts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve thread of posts — bs_get_posts","text":"tibble::tibble posts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_posts.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve thread of posts — bs_get_posts","text":"feed/getPosts.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_posts.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve thread of posts — bs_get_posts","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_posts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve thread of posts — bs_get_posts","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_posts('at://did:plc:ic6zqvuw5ulmfpjiwnhsr2ns/app.bsky.feed.post/3k7qmjev5lr2s') bs_get_posts('https://bsky.app/profile/chriskenny.bsky.social/post/3lc5d6zspys2c') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_preferences.html","id":null,"dir":"Reference","previous_headings":"","what":"Get (Self) Preferences — bs_get_preferences","title":"Get (Self) Preferences — bs_get_preferences","text":"Get (Self) Preferences","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_preferences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get (Self) Preferences — bs_get_preferences","text":"","code":"bs_get_preferences(   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_preferences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get (Self) Preferences — bs_get_preferences","text":"user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_preferences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get (Self) Preferences — bs_get_preferences","text":"tibble::tibble preferences","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_preferences.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get (Self) Preferences — bs_get_preferences","text":"actor/getPreferences.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_preferences.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get (Self) Preferences — bs_get_preferences","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_preferences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get (Self) Preferences — bs_get_preferences","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_preferences() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Profile for a Bluesky Social User — bs_get_profile","title":"Get Profile for a Bluesky Social User — bs_get_profile","text":"Get Profile Bluesky Social User","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Profile for a Bluesky Social User — bs_get_profile","text":"","code":"bs_get_profile(   actors,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Profile for a Bluesky Social User — bs_get_profile","text":"actors character vector actor(s), 'chriskenny.bsky.social' user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Profile for a Bluesky Social User — bs_get_profile","text":"tibble row actor","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_profile.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get Profile for a Bluesky Social User — bs_get_profile","text":"actor/getProfiles.json (2023-10-01) actor/getProfile.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_profile.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get Profile for a Bluesky Social User — bs_get_profile","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Profile for a Bluesky Social User — bs_get_profile","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_profile('chriskenny.bsky.social') bs_get_profile(actors = c('chriskenny.bsky.social', 'simko.bsky.social')) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_quotes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a list of quotes for a given post — bs_get_quotes","title":"Retrieve a list of quotes for a given post — bs_get_quotes","text":"Retrieve list quotes given post","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_quotes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a list of quotes for a given post — bs_get_quotes","text":"","code":"bs_get_quotes(   uri,   cid,   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_quotes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a list of quotes for a given post — bs_get_quotes","text":"uri Character, length 1. URI post get. cid Optional, character. Filters quotes specific version (CID) post record cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_quotes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a list of quotes for a given post — bs_get_quotes","text":"tibble::tibble quote posts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_quotes.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve a list of quotes for a given post — bs_get_quotes","text":"feed/getQuotes.json (2024-12-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_quotes.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve a list of quotes for a given post — bs_get_quotes","text":"v0.2.0 (2024-12-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_quotes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a list of quotes for a given post — bs_get_quotes","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_quotes('at://did:plc:5c2r73erhng4bszmxlfdtscf/app.bsky.feed.post/3lc5c5qv72r2w') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an arbitrary record from a repo — bs_get_record","title":"Get an arbitrary record from a repo — bs_get_record","text":"Get arbitrary record repo","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an arbitrary record from a repo — bs_get_record","text":"","code":"bs_get_record(   repo = NULL,   collection = NULL,   rkey = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an arbitrary record from a repo — bs_get_record","text":"repo Character, length 1. handle repo. collection Character, length 1. NSID record collection. rkey Character, length 1. CID version record. specified, return recent version. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an arbitrary record from a repo — bs_get_record","text":"tibble::tibble upload blob information","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_record.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get an arbitrary record from a repo — bs_get_record","text":"repo/getRecord.json (2023-11-24)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_record.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get an arbitrary record from a repo — bs_get_record","text":"v0.1.0 (2023-11-24)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get an arbitrary record from a repo — bs_get_record","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_get_record('https://bsky.app/profile/bskyr.bsky.social/post/3kf2577exva2x') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_relationships.html","id":null,"dir":"Reference","previous_headings":"","what":"Get relationships between an account and other users — bs_get_relationships","title":"Get relationships between an account and other users — bs_get_relationships","text":"Get relationships account users","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_relationships.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get relationships between an account and other users — bs_get_relationships","text":"","code":"bs_get_relationships(   actor,   others,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_relationships.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get relationships between an account and other users — bs_get_relationships","text":"actor Character, length 1. name 1 actor, 'chriskenny.bsky.social' others Optional, character vector users look relationships user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_relationships.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get relationships between an account and other users — bs_get_relationships","text":"tibble::tibble relationships","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_relationships.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get relationships between an account and other users — bs_get_relationships","text":"graph/getRelationships.json (2024-12-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_relationships.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get relationships between an account and other users — bs_get_relationships","text":"v0.2.0 (2024-12-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_relationships.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get relationships between an account and other users — bs_get_relationships","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_relationships('chriskenny.bsky.social', 'bskyr.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_reposts.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve actors who reposted a post — bs_get_reposts","title":"Retrieve actors who reposted a post — bs_get_reposts","text":"Retrieve actors reposted post","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_reposts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve actors who reposted a post — bs_get_reposts","text":"","code":"bs_get_reposts(   uri,   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_reposts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve actors who reposted a post — bs_get_reposts","text":"uri Character, length 1. URI post get. cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_reposts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve actors who reposted a post — bs_get_reposts","text":"tibble::tibble actors","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_reposts.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve actors who reposted a post — bs_get_reposts","text":"feed/getRepostedBy.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_reposts.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve actors who reposted a post — bs_get_reposts","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_reposts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve actors who reposted a post — bs_get_reposts","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_reposts('at://did:plc:ic6zqvuw5ulmfpjiwnhsr2ns/app.bsky.feed.post/3kaa2gxjhzr2a') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_starter_pack.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information on one starter pack — bs_get_starter_pack","title":"Get information on one starter pack — bs_get_starter_pack","text":"Get information one starter pack","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_starter_pack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information on one starter pack — bs_get_starter_pack","text":"","code":"bs_get_starter_pack(   starter_pack,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_starter_pack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information on one starter pack — bs_get_starter_pack","text":"starter_pack Character vector, length 1. URI starter pack get. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_starter_pack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information on one starter pack — bs_get_starter_pack","text":"tibble::tibble starter packs","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_starter_pack.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get information on one starter pack — bs_get_starter_pack","text":"graph/getStarterPack.json (2024-11-20)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_starter_pack.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get information on one starter pack — bs_get_starter_pack","text":"v0.2.0 (2024-11-20)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_starter_pack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information on one starter pack — bs_get_starter_pack","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_starter_pack(   'at://did:plc:wpe35pganb6d4pg4ekmfy6u5/app.bsky.graph.starterpack/3lb3g5veo2z2r' ) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_starter_packs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about a list of starter packs — bs_get_starter_packs","title":"Get information about a list of starter packs — bs_get_starter_packs","text":"Get information list starter packs","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_starter_packs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about a list of starter packs — bs_get_starter_packs","text":"","code":"bs_get_starter_packs(   starter_packs,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_starter_packs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about a list of starter packs — bs_get_starter_packs","text":"starter_packs Character vector. Vector URIs starter packs get. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_starter_packs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information about a list of starter packs — bs_get_starter_packs","text":"tibble::tibble starter packs","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_starter_packs.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get information about a list of starter packs — bs_get_starter_packs","text":"graph/getStarterPacks.json (2024-11-20)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_starter_packs.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get information about a list of starter packs — bs_get_starter_packs","text":"v0.2.0 (2024-11-20)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_starter_packs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information about a list of starter packs — bs_get_starter_packs","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_starter_packs(   'at://did:plc:wpe35pganb6d4pg4ekmfy6u5/app.bsky.graph.starterpack/3lb3g5veo2z2r' ) bs_get_starter_packs(   c(     'at://did:plc:wpe35pganb6d4pg4ekmfy6u5/app.bsky.graph.starterpack/3lb3g5veo2z2r',     'at://did:plc:bmc56x6ksb7o7sdkq2fgm7se/app.bsky.graph.starterpack/3laywns2q2v27'   ) ) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the user's home timeline — bs_get_timeline","title":"Retrieve the user's home timeline — bs_get_timeline","text":"Retrieve user's home timeline","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the user's home timeline — bs_get_timeline","text":"","code":"bs_get_timeline(   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the user's home timeline — bs_get_timeline","text":"cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_timeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the user's home timeline — bs_get_timeline","text":"tibble::tibble posts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_timeline.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve the user's home timeline — bs_get_timeline","text":"feed/getTimeline.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_timeline.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve the user's home timeline — bs_get_timeline","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_timeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the user's home timeline — bs_get_timeline","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_timeline() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_like.html","id":null,"dir":"Reference","previous_headings":"","what":"Like an existing post — bs_like","title":"Like an existing post — bs_like","text":"Like existing post","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_like.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Like an existing post — bs_like","text":"","code":"bs_like(   post,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_like.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Like an existing post — bs_like","text":"post Character vector, length 1. Link post. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_like.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Like an existing post — bs_like","text":"tibble::tibble post information","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_like.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Like an existing post — bs_like","text":"feed/like.json (2023-11-25) repo/createRecord.json (2023-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_like.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Like an existing post — bs_like","text":"v0.1.0 (2023-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_like.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Like an existing post — bs_like","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_like(post = 'https://bsky.app/profile/bskyr.bsky.social/post/3kf2577exva2x') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_list_convos.html","id":null,"dir":"Reference","previous_headings":"","what":"List the conversations (direct message threads) for the authenticated user — bs_list_convos","title":"List the conversations (direct message threads) for the authenticated user — bs_list_convos","text":"List conversations (direct message threads) authenticated user","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_list_convos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the conversations (direct message threads) for the authenticated user — bs_list_convos","text":"","code":"bs_list_convos(   read_state = NULL,   status = NULL,   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_list_convos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List the conversations (direct message threads) for the authenticated user — bs_list_convos","text":"read_state Character, optional. Filter read state, one c('unread'). Default: NULL. status Character, optional. Filter conversation status, one c('accepted', 'request'). Default: NULL. cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_list_convos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the conversations (direct message threads) for the authenticated user — bs_list_convos","text":"tibble::tibble list clean = FALSE","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_list_convos.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"List the conversations (direct message threads) for the authenticated user — bs_list_convos","text":"chat.bsky.convo.listConvos.json (2025-05-16)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_list_convos.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"List the conversations (direct message threads) for the authenticated user — bs_list_convos","text":"v0.3.1 (2025-05-16)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_list_convos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List the conversations (direct message threads) for the authenticated user — bs_list_convos","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_list_convos(limit = 5, status = 'accepted') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_list_records.html","id":null,"dir":"Reference","previous_headings":"","what":"List records in a repo — bs_list_records","title":"List records in a repo — bs_list_records","text":"List records repo","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_list_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List records in a repo — bs_list_records","text":"","code":"bs_list_records(   repo,   collection,   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_list_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List records in a repo — bs_list_records","text":"repo Character, length 1. handle repo. collection Character, length 1. NSID record collection. cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_list_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List records in a repo — bs_list_records","text":"tibble::tibble record information","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_list_records.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"List records in a repo — bs_list_records","text":"repo/createRecord.json (2023-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_list_records.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"List records in a repo — bs_list_records","text":"v0.1.0 (2023-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_list_records.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List records in a repo — bs_list_records","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_list_records(repo = 'chriskenny.bsky.social', collection = 'app.bsky.feed.post') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_embed_external.html","id":null,"dir":"Reference","previous_headings":"","what":"Embed external media in a post — bs_new_embed_external","title":"Embed external media in a post — bs_new_embed_external","text":"Embeds designed standalone records, rather part post. create list representation external embed.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_embed_external.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Embed external media in a post — bs_new_embed_external","text":"","code":"bs_new_embed_external(   uri,   title,   description,   thumb,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass) )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_embed_external.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Embed external media in a post — bs_new_embed_external","text":"uri link embed title title link description description link thumb Optional. thumbnail link user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass).","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_embed_external.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Embed external media in a post — bs_new_embed_external","text":"list representation external embed","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_embed_external.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Embed external media in a post — bs_new_embed_external","text":"embed/external.json (2024-12-05)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_embed_external.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Embed external media in a post — bs_new_embed_external","text":"v0.2.0 (2024-12-05)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_embed_external.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Embed external media in a post — bs_new_embed_external","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_new_embed_external(   uri = 'https://christophertkenny.com/bskyr/',   title = 'Interact with Bluesky Social',   description = 'An R package for using Bluesky Social' )  bs_new_embed_external(   uri = 'https://christophertkenny.com/bskyr/' ) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list — bs_new_list","title":"Create a list — bs_new_list","text":"Create list","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list — bs_new_list","text":"","code":"bs_new_list(   name,   purpose,   description,   avatar,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a list — bs_new_list","text":"name Character. Display name list. purpose Purpose list. One 'modlist', 'curatelist', 'referencelist' description Optional character. Description list. avatar Optional character. Path image use avatar. PNG JPEG recommended. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list — bs_new_list","text":"tibble::tibble list information","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_list.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Create a list — bs_new_list","text":"graph/list.json (2024-12-01) graph/defs.json (2024-12-01) repo/createRecord.json (2023-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_list.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Create a list — bs_new_list","text":"v0.2.0 (2024-12-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a list — bs_new_list","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_new_list(name = 'test list bskyr', purpose = 'curatelist') bs_new_list(   name = 'test list bskyr w avatar',   description = 'to be deleted, just for testing bskyr',   avatar = fs::path_package('bskyr', 'man/figures/logo.png'),   purpose = 'curatelist' ) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_list_item.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a subject to a list — bs_new_list_item","title":"Add a subject to a list — bs_new_list_item","text":"Add subject list","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_list_item.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a subject to a list — bs_new_list_item","text":"","code":"bs_new_list_item(   subject,   uri,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_list_item.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a subject to a list — bs_new_list_item","text":"subject Character, length 1. Subject act , handle . uri Character, length 1. URI list add subject . user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_list_item.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a subject to a list — bs_new_list_item","text":"tibble::tibble list item information","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_list_item.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Add a subject to a list — bs_new_list_item","text":"graph/listitem.json (2024-12-01) repo/createRecord.json (2023-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_list_item.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Add a subject to a list — bs_new_list_item","text":"v0.2.0 (2024-12-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_list_item.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a subject to a list — bs_new_list_item","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() lst <- bs_new_list(name = 'test list listitem bskyr', purpose = 'curatelist') bs_new_list_item(subject = 'chriskenny.bsky.social', uri = lst$uri) # see the list item bs_get_list(lst$uri) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_starter_pack.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new starter pack — bs_new_starter_pack","title":"Create a new starter pack — bs_new_starter_pack","text":"Create new starter pack","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_starter_pack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new starter pack — bs_new_starter_pack","text":"","code":"bs_new_starter_pack(   name,   list,   description,   feeds,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_starter_pack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new starter pack — bs_new_starter_pack","text":"name Character. Display name starter pack list Character. List base starter pack . provided, new list created. description Optional character. Description list. feeds Optional character. List feed items include starter pack. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_starter_pack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new starter pack — bs_new_starter_pack","text":"tibble::tibble post information","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_starter_pack.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Create a new starter pack — bs_new_starter_pack","text":"graph/starterpack.json (2024-12-04) repo/createRecord.json (2023-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_starter_pack.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Create a new starter pack — bs_new_starter_pack","text":"v0.2.0 (2024-12-04)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_new_starter_pack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new starter pack — bs_new_starter_pack","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_new_starter_pack('bskyr test') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a post on Bluesky Social — bs_post","title":"Make a post on Bluesky Social — bs_post","text":"Make post Bluesky Social","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a post on Bluesky Social — bs_post","text":"","code":"bs_post(   text,   images,   images_alt,   video,   video_alt,   langs,   reply,   quote,   embed = TRUE,   emoji = TRUE,   max_tries,   created_at = bs_created_at(),   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a post on Bluesky Social — bs_post","text":"text Text post images Character vector paths images attach post images_alt Character vector alt text images. Must length images used. video Character vector path one video attach post video_alt Character vector, length one, alt text video, used. langs Character vector languages BCP-47 format reply Character vector link parent post reply quote Character vector link post quote embed Logical. Default TRUE. link card embedded? emoji Logical. Default TRUE. :emoji: style references converted? max_tries Integer, >= 2. Number times retry request first fails. created_at Character, length 1 form \"%Y-%m-%dT%H:%M:%OS6Z\". Time assign record. Default bs_created_at(). user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a post on Bluesky Social — bs_post","text":"tibble::tibble post information","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_post.html","id":"emoji-parsing","dir":"Reference","previous_headings":"","what":"Emoji parsing","title":"Make a post on Bluesky Social — bs_post","text":":emoji: parsing formally supported Bluesky feature. package converts usages kind identifying text within :s, \"emoji\" matches emoji package's list emoji names. supported emoji names corresponding images can seen emoji::emoji_name. feature introduced v0.2.0.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_post.html","id":"embedding","dir":"Reference","previous_headings":"","what":"Embedding","title":"Make a post on Bluesky Social — bs_post","text":"Embedding feature allows link card created URL media added preview post. feature introduced v0.2.0. Embeds processed follows: .list(embed), assumed embed object. created bs_new_embed_external(), unless certain structure. .character(embed), assumed URL. function use open graph protocol try infer embed URL. isTRUE(embed), default, tries infer embed text. First, Tenor Gif link found text, embedded. Second, URL found text, embedded. first URL found embedded. isFALSE(embed) match earlier condidtion, embed created post sent .","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_post.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Make a post on Bluesky Social — bs_post","text":"feed/post.json (2024-11-29) repo/createRecord.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_post.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Make a post on Bluesky Social — bs_post","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_post.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a post on Bluesky Social — bs_post","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_post('Test post from R CMD Check for r package `bskyr` via @bskyr.bsky.social (https://christophertkenny.com/bskyr/)') bs_post('Test self-reply from r package `bskyr` via @bskyr.bsky.social (https://christophertkenny.com/bskyr/)',   reply = 'https://bsky.app/profile/bskyr.bsky.social/post/3kexwuoyqj32g' ) bs_post('Test quoting from r package `bskyr` via @bskyr.bsky.social (https://christophertkenny.com/bskyr/)',   quote = 'https://bsky.app/profile/bskyr.bsky.social/post/3kf24wd6cmb2a' ) bs_post('Test quote and reply from r package `bskyr` via @bskyr.bsky.social (https://christophertkenny.com/bskyr/)',   reply = 'https://bsky.app/profile/bskyr.bsky.social/post/3kexwuoyqj32g',   quote = 'https://bsky.app/profile/bskyr.bsky.social/post/3kf24wd6cmb2a' )  bs_post('Test quote with :emoji: and :fire: and :confetti_ball: from r package   `bskyr` via @bskyr.bsky.social (https://christophertkenny.com/bskyr/)')  bs_post(   text = 'Testing images and aspect ratios from R',   images = fs::path_package('bskyr', 'man/figures/logo.png'),   images_alt = 'hexagonal logo of the R package bskyr, with the text \"bskyr\" on a cloud' )  bs_post(   text = 'testing sending videos from R',   video = fs::path_package('bskyr', 'man/figures/pkgs.mp4'),   video_alt = 'a carousel of package logos, all hexagonal' ) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_repost.html","id":null,"dir":"Reference","previous_headings":"","what":"Repost an existing post — bs_repost","title":"Repost an existing post — bs_repost","text":"Repost existing post","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_repost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repost an existing post — bs_repost","text":"","code":"bs_repost(   post,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_repost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repost an existing post — bs_repost","text":"post Character vector, length 1. Link post. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_repost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repost an existing post — bs_repost","text":"tibble::tibble post information","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_repost.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Repost an existing post — bs_repost","text":"feed/repost.json (2023-11-25) repo/createRecord.json (2023-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_repost.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Repost an existing post — bs_repost","text":"v0.1.0 (2023-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_repost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repost an existing post — bs_repost","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_repost('https://bsky.app/profile/bskyr.bsky.social/post/3kf2577exva2x') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_resolve_handle.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve a Handle to Decentralized Identifier (DID) — bs_resolve_handle","title":"Resolve a Handle to Decentralized Identifier (DID) — bs_resolve_handle","text":"Resolve Handle Decentralized Identifier ()","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_resolve_handle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve a Handle to Decentralized Identifier (DID) — bs_resolve_handle","text":"","code":"bs_resolve_handle(   handle,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_resolve_handle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve a Handle to Decentralized Identifier (DID) — bs_resolve_handle","text":"handle Character, length 1. Handle, 'chriskenny.bsky.social' user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_resolve_handle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve a Handle to Decentralized Identifier (DID) — bs_resolve_handle","text":"tibble::tibble decentralized identifier","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_resolve_handle.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Resolve a Handle to Decentralized Identifier (DID) — bs_resolve_handle","text":"identity/resolveHandle.json (2023-11-24)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_resolve_handle.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Resolve a Handle to Decentralized Identifier (DID) — bs_resolve_handle","text":"v0.1.0 (2023-11-24)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_resolve_handle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resolve a Handle to Decentralized Identifier (DID) — bs_resolve_handle","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_resolve_handle('chriskenny.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_actors.html","id":null,"dir":"Reference","previous_headings":"","what":"Find profiles matching search criteria — bs_search_actors","title":"Find profiles matching search criteria — bs_search_actors","text":"Find profiles matching search criteria","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_actors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find profiles matching search criteria — bs_search_actors","text":"","code":"bs_search_actors(   query,   typeahead = FALSE,   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_actors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find profiles matching search criteria — bs_search_actors","text":"query character. search query, Lucene query syntax recommended typeahead = FALSE. typeahead logical. Use typeahead search? Default FALSE. cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_actors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find profiles matching search criteria — bs_search_actors","text":"tibble::tibble suggested accounts follow","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_actors.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Find profiles matching search criteria — bs_search_actors","text":"actor/searchActors.json (2023-10-01) actor/searchActorsTypeahead.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_actors.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Find profiles matching search criteria — bs_search_actors","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_actors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find profiles matching search criteria — bs_search_actors","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_search_actors('political science') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_posts.html","id":null,"dir":"Reference","previous_headings":"","what":"Find posts matching search criteria — bs_search_posts","title":"Find posts matching search criteria — bs_search_posts","text":"Find posts matching search criteria","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_posts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find posts matching search criteria — bs_search_posts","text":"","code":"bs_search_posts(   query,   sort = NULL,   since = NULL,   until = NULL,   mentions = NULL,   author = NULL,   lang = NULL,   domain = NULL,   url = NULL,   tag = NULL,   cursor = NULL,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_posts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find posts matching search criteria — bs_search_posts","text":"query Character vector, length 1. character. Search query, Lucene query syntax recommended. sort character. Order results. Either 'top' 'latest' since character. Filter results posts indicated datetime ISO date (YYYY-MM-DD). character. Filter results posts indicated datetime ISO date (YYYY-MM-DD). mentions character. Filter posts mention given account. author character. Filter posts given account. lang character. Filter posts given language. domain character. Filter posts URLs (facet links embeds) linking given domain (hostname). Server may apply hostname normalization. url character. Filter posts links (facet links embeds) pointing URL. Server may apply URL normalization fuzzy matching. tag character. Filter posts given tag (hashtag), based rich-text facet tag field. include hash (#) prefix. Multiple tags can specified, '' matching. cursor Character, length 1. cursor property prior response. Default: NULL. limit Integer. Number records request. 100, multiple requests made. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_posts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find posts matching search criteria — bs_search_posts","text":"tibble::tibble suggested accounts follow","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_posts.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Find posts matching search criteria — bs_search_posts","text":"feed/searchPosts.json (2024-11-25)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_posts.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Find posts matching search criteria — bs_search_posts","text":"v0.1.1 (2023-12-13)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_posts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find posts matching search criteria — bs_search_posts","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_search_posts('redistricting') bs_search_posts('ggplot2', tag = 'rstats', sort = 'latest') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_upload_blob.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload a blob to a repo — bs_upload_blob","title":"Upload a blob to a repo — bs_upload_blob","text":"Upload blob repo","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_upload_blob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload a blob to a repo — bs_upload_blob","text":"","code":"bs_upload_blob(   blob,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_upload_blob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload a blob to a repo — bs_upload_blob","text":"blob Character, files upload repo. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_upload_blob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload a blob to a repo — bs_upload_blob","text":"tibble::tibble upload blob information","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_upload_blob.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Upload a blob to a repo — bs_upload_blob","text":"repo/uploadBlob.json (2023-11-24)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_upload_blob.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Upload a blob to a repo — bs_upload_blob","text":"v0.1.0 (2023-11-24)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_upload_blob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload a blob to a repo — bs_upload_blob","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() fig <- fs::path_package('bskyr', 'man/figures/logo.png') bs_upload_blob(fig) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_uri_to_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Universal Resource Identifiers to Hypertext Transfer Protocol Secure URLs — bs_uri_to_url","title":"Convert Universal Resource Identifiers to Hypertext Transfer Protocol Secure URLs — bs_uri_to_url","text":"Convert Universal Resource Identifiers Hypertext Transfer Protocol Secure URLs","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_uri_to_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Universal Resource Identifiers to Hypertext Transfer Protocol Secure URLs — bs_uri_to_url","text":"","code":"bs_uri_to_url(uri)"},{"path":"http://christophertkenny.com/bskyr/reference/bs_uri_to_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Universal Resource Identifiers to Hypertext Transfer Protocol Secure URLs — bs_uri_to_url","text":"uri Character, length 1. URI post get.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_uri_to_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Universal Resource Identifiers to Hypertext Transfer Protocol Secure URLs — bs_uri_to_url","text":"character vector HTTPS URLs","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_uri_to_url.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Convert Universal Resource Identifiers to Hypertext Transfer Protocol Secure URLs — bs_uri_to_url","text":"v0.1.0 (2023-11-24)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_uri_to_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Universal Resource Identifiers to Hypertext Transfer Protocol Secure URLs — bs_uri_to_url","text":"","code":"bs_uri_to_url('at://did:plc:ic6zqvuw5ulmfpjiwnhsr2ns/app.bsky.feed.post/3k7qmjev5lr2s') #> [1] \"https://bsky.app/profile/did:plc:ic6zqvuw5ulmfpjiwnhsr2ns/post/3k7qmjev5lr2s\""},{"path":"http://christophertkenny.com/bskyr/reference/bs_url_to_uri.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Hypertext Transfer Protocol Secure URLs to Universal Resource Identifiers — bs_url_to_uri","title":"Convert Hypertext Transfer Protocol Secure URLs to Universal Resource Identifiers — bs_url_to_uri","text":"Convert Hypertext Transfer Protocol Secure URLs Universal Resource Identifiers","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_url_to_uri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Hypertext Transfer Protocol Secure URLs to Universal Resource Identifiers — bs_url_to_uri","text":"","code":"bs_url_to_uri(   url,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass) )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_url_to_uri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Hypertext Transfer Protocol Secure URLs to Universal Resource Identifiers — bs_url_to_uri","text":"url Character, length 1. URL record get. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass).","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_url_to_uri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Hypertext Transfer Protocol Secure URLs to Universal Resource Identifiers — bs_url_to_uri","text":"character vector URIs","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_url_to_uri.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Convert Hypertext Transfer Protocol Secure URLs to Universal Resource Identifiers — bs_url_to_uri","text":"v0.2.0 (2024-11-30)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_url_to_uri.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Hypertext Transfer Protocol Secure URLs to Universal Resource Identifiers — bs_url_to_uri","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_url_to_uri('https://bsky.app/profile/chriskenny.bsky.social/post/3lc5d6zspys2c') }"},{"path":"http://christophertkenny.com/bskyr/reference/pass.html","id":null,"dir":"Reference","previous_headings":"","what":"Check or Get Bluesky App Password — pass","title":"Check or Get Bluesky App Password — pass","text":"Check Get Bluesky App Password","code":""},{"path":"http://christophertkenny.com/bskyr/reference/pass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check or Get Bluesky App Password — pass","text":"","code":"has_bluesky_pass()  get_bluesky_pass()  bs_get_pass()  bs_has_pass()"},{"path":"http://christophertkenny.com/bskyr/reference/pass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check or Get Bluesky App Password — pass","text":"logical , pass get","code":""},{"path":"http://christophertkenny.com/bskyr/reference/pass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check or Get Bluesky App Password — pass","text":"","code":"has_bluesky_pass() #> [1] FALSE"},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_pass.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Entry to Renviron — set_bluesky_pass","title":"Add Entry to Renviron — set_bluesky_pass","text":"Adds Bluesky App Password .Renviron.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_pass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Entry to Renviron — set_bluesky_pass","text":"","code":"set_bluesky_pass(pass, overwrite = FALSE, install = FALSE, r_env = NULL)  bs_set_pass(pass, overwrite = FALSE, install = FALSE, r_env = NULL)"},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_pass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Entry to Renviron — set_bluesky_pass","text":"pass Character. App Password add add. overwrite Defaults FALSE. Boolean. existing BLUESKY_APP_PASS Renviron overwritten? install Defaults FALSE. Boolean. added '~/.Renviron' file? r_env Path install install TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_pass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Entry to Renviron — set_bluesky_pass","text":"pass, invisibly","code":""},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_pass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Entry to Renviron — set_bluesky_pass","text":"","code":"example_env <- tempfile(fileext = '.Renviron') set_bluesky_pass('1234-1234-1234-1234', r_env = example_env) #> No password set when invalid test password is provided. # r_env should likely be: file.path(Sys.getenv('HOME'), '.Renviron')"},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds Bluesky User to .Renviron. — set_bluesky_user","title":"Adds Bluesky User to .Renviron. — set_bluesky_user","text":"Adds Bluesky User .Renviron.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds Bluesky User to .Renviron. — set_bluesky_user","text":"","code":"set_bluesky_user(user, overwrite = FALSE, install = FALSE, r_env = NULL)  bs_set_user(user, overwrite = FALSE, install = FALSE, r_env = NULL)"},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds Bluesky User to .Renviron. — set_bluesky_user","text":"user Character. User add add. overwrite Defaults FALSE. Boolean. existing BLUESKY_APP_USER Renviron overwritten? install Defaults FALSE. Boolean. added '~/.Renviron' file? r_env Path install install TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds Bluesky User to .Renviron. — set_bluesky_user","text":"user, invisibly","code":""},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds Bluesky User to .Renviron. — set_bluesky_user","text":"","code":"example_env <- tempfile(fileext = '.Renviron') set_bluesky_user('CRAN_EXAMPLE.bsky.social', r_env = example_env) #> No username set when invalid test username is provided. # r_env should likely be: file.path(Sys.getenv('HOME'), '.Renviron')"},{"path":"http://christophertkenny.com/bskyr/reference/user.html","id":null,"dir":"Reference","previous_headings":"","what":"Check or Get Bluesky User — user","title":"Check or Get Bluesky User — user","text":"Check Get Bluesky User","code":""},{"path":"http://christophertkenny.com/bskyr/reference/user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check or Get Bluesky User — user","text":"","code":"has_bluesky_user()  get_bluesky_user()  bs_get_user()  bs_has_user()"},{"path":"http://christophertkenny.com/bskyr/reference/user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check or Get Bluesky User — user","text":"logical , user get","code":""},{"path":"http://christophertkenny.com/bskyr/reference/user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check or Get Bluesky User — user","text":"","code":"has_bluesky_user() #> [1] FALSE"},{"path":"http://christophertkenny.com/bskyr/news/index.html","id":"bskyr-031","dir":"Changelog","previous_headings":"","what":"bskyr 0.3.1","title":"bskyr 0.3.1","text":"Fixes issue OpenGraph links size hint fail downloading. (#32) Improves transformations starter packs tibbles cleaner unnesting. (#31) Allows 25 actors bs_get_profile(), (#29, #30). Improves bs_get_likes() processing makes clear self-.","code":""},{"path":"http://christophertkenny.com/bskyr/news/index.html","id":"bskyr-030","dir":"Changelog","previous_headings":"","what":"bskyr 0.3.0","title":"bskyr 0.3.0","text":"CRAN release: 2025-05-02 Adds support embedded link cards bs_post(). (#17) Adds new function bs_new_embed_external() support manual setup external embeds. (#17) Adds control bs_post() new argument created_at customize times posts. (#21) Attempts add aspect ratio image posts, image can read magick. (#20) Adds support get list feed bs_get_list_feed(). (#26) Corrects bug parsing URLs posts tagging richtext. (#23) Adds bs_delete_post() delete posts.","code":""},{"path":"http://christophertkenny.com/bskyr/news/index.html","id":"bskyr-020","dir":"Changelog","previous_headings":"","what":"bskyr 0.2.0","title":"bskyr 0.2.0","text":"CRAN release: 2025-02-08 bs_get_posts(): Posts now returned tibble one row per post, regardless type. bs_get_author_feed(): Posts longer create extra columns multiple embeds. bs_get_actor_starter_packs() retrieves list starter packs specific actor. bs_get_starter_pack() retrieves specific starter pack. bs_get_starter_packs() retrieves list starter packs. Adds support additional search parameters bs_search_posts() (#6) Adds support emoji text posts, powered emoji package. (#11) additionally allows bs_get_posts() take URLs. Add support posting videos within bs_post(), including gifs (#5). bs_get_actor_lists() retrieves lists made actor bs_get_list() retrieves view list bs_new_list() creates new list bs_delete_list() deletes list bs_new_list_item() adds someone list bs_delete_list_item() removes someone list Adds new helper function bs_extract_record_key() extract record id key URL URI. Adds support getting relationships users bs_get_relationships(). Adds support getting quote posts given post bs_get_quotes(). Fixes bug repeated requests result duplicate responses. (#13) Adds max_tries argument can set avoid transient issues. (#15) Improves processing tags posts (@nguyenank, #10). Images created bs_create_record() clean = TRUE can passed images bs_post(). bs_follow() allows following “subjects” (colloquially, users) bs_unfollow() allows deleting follow records bs_block() allows blocking “subjects” bs_unblock() allows deleting block records bs_unlike() allows deleting like records bs_delete_repost() allows deleting repost records bs_new_starter_pack() allows creating new starter packs bs_delete_starter_pack() allows deleting starter packs","code":""},{"path":"http://christophertkenny.com/bskyr/news/index.html","id":"bskyr-013","dir":"Changelog","previous_headings":"","what":"bskyr 0.1.3","title":"bskyr 0.1.3","text":"Fixes bug posting single image fails (#3). Improves authentication experience using local cache avoid timeouts (#2). Requires alt text bs_post() avoid issues posting images due accessibility settings upstream. Adds support linking hashtags.","code":""},{"path":"http://christophertkenny.com/bskyr/news/index.html","id":"bskyr-012","dir":"Changelog","previous_headings":"","what":"bskyr 0.1.2","title":"bskyr 0.1.2","text":"CRAN release: 2024-01-09 Requests clean = TRUE now include attribute “request_url” request URL. include headers, authentication information recorded. functions limit arguments now gain cursor argument. allows requesting pages results. functions limit arguments now automatically make additional API calls results requested limit. example, bs_get_followers() limited 100 results per call. limit = 301, make 4 API calls get 301 results. progress bar appear response taking sufficient time return. Fixes bug bs_get_feed() discard posts interactions.","code":""},{"path":"http://christophertkenny.com/bskyr/news/index.html","id":"bskyr-011","dir":"Changelog","previous_headings":"","what":"bskyr 0.1.1","title":"bskyr 0.1.1","text":"Provides support new post search endpoint bs_search_posts()","code":""},{"path":"http://christophertkenny.com/bskyr/news/index.html","id":"bskyr-010","dir":"Changelog","previous_headings":"","what":"bskyr 0.1.0","title":"bskyr 0.1.0","text":"CRAN release: 2023-11-26 Language posts can specified langs argument. Images can specified images argument. Alt text images can specified images_alt argument. Mentions URLs now parsed passed richtext facets, automatically. Replies can made specifying reply argument link post reply . Quotes can made specifying quote argument link post quote. Adds support direct blob uploads bs_upload_blob(). powers ability add media posts. Adds bs_uri_to_url() formats given uri HTTPS URL. Adds bs_resolve_handle() convert handles decentralized identifiers (DIDs). bs_create_record() creates record. bs_delete_record() deletes record. bs_get_record() gets existing record. bs_list_records() lists existing records user collection. bs_describe_repo() provides list types collections user . Use helper function bs_created_at() get specific time formatting.","code":""},{"path":"http://christophertkenny.com/bskyr/news/index.html","id":"bskyr-005","dir":"Changelog","previous_headings":"","what":"bskyr 0.0.5","title":"bskyr 0.0.5","text":"Fixes testing issues CRAN token available. Adds clean argument decide response cleaned tibble returning. FALSE, receive json list. Adds support changing limits number results returned.","code":""},{"path":"http://christophertkenny.com/bskyr/news/index.html","id":"bskyr-001","dir":"Changelog","previous_headings":"","what":"bskyr 0.0.1","title":"bskyr 0.0.1","text":"Initial package version, implementing features accessing details actors (user profiles), making posts, . Implements testing testthat httptest2. Limited posting abilities, initial version focused collecting data creating data.","code":""}]
