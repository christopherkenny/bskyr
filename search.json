[{"path":"http://christophertkenny.com/bskyr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 bskyr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://christophertkenny.com/bskyr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christopher T. Kenny. Author, maintainer.","code":""},{"path":"http://christophertkenny.com/bskyr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kenny C (2023). bskyr: Interact 'Bluesky' Social. R package version 0.1.0, http://christophertkenny.com/bskyr/, https://github.com/christopherkenny/bskyr.","code":"@Manual{,   title = {bskyr: Interact with 'Bluesky' Social},   author = {Christopher T. Kenny},   year = {2023},   note = {R package version 0.1.0, http://christophertkenny.com/bskyr/},   url = {https://github.com/christopherkenny/bskyr}, }"},{"path":"http://christophertkenny.com/bskyr/index.html","id":"bskyr-","dir":"","previous_headings":"","what":"Interact with Bluesky Social","title":"Interact with Bluesky Social","text":"bskyr provides interface Bluesky API, allowing interact Bluesky Social R. , provide functions match Protocol’s Lexicon, like using regular HTTP requests. Outputs bskyr’s functions primarily tibbles, allowing easy analysis outputs API calls. bskyr currently development. first set functions focused getting information. second (current) set work handling posts friendly way.","code":""},{"path":"http://christophertkenny.com/bskyr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interact with Bluesky Social","text":"can install development version bskyr GitHub :","code":"# install.packages('devtools') remotes::install_github('christopherkenny/bskyr')"},{"path":"http://christophertkenny.com/bskyr/index.html","id":"posting-with-bskyr","dir":"","previous_headings":"","what":"Posting with bskyr","title":"Interact with Bluesky Social","text":"Posting capabilities still development. Text posts can made follows:","code":"library(bskyr) bs_post('Your text goes here.')"},{"path":"http://christophertkenny.com/bskyr/index.html","id":"authentication","dir":"","previous_headings":"","what":"Authentication","title":"Interact with Bluesky Social","text":"authenticate, first need make App Password. , go https://bsky.app/settings. “Advanced” click App passwords “Add App Password.” password, need run: want persist across sessions, set install = TRUE r_env = file.path(Sys.getenv('HOME'), '.Renviron'). save credentials R environment file. Alternatively, can set manually using usethis::edit_r_environ() adding lines like :","code":"set_bluesky_user('YOUR-USERNAME.bsky.social') set_bluesky_pass('your-apps-pass-word') BLUESKY_APP_USER='YOUR-USERNAME.bsky.social' BLUESKY_APP_PASS='your-apps-pass-word'"},{"path":"http://christophertkenny.com/bskyr/reference/bs_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Authenticate a user — bs_auth","title":"Authenticate a user — bs_auth","text":"Authenticate user","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authenticate a user — bs_auth","text":"","code":"bs_auth(user, pass)"},{"path":"http://christophertkenny.com/bskyr/reference/bs_auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authenticate a user — bs_auth","text":"user Character. User name log . pass Character. App password log .","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_auth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Authenticate a user — bs_auth","text":"list authentication information","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_auth.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Authenticate a user — bs_auth","text":"server/createSession.json (2023-09-30)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_auth.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Authenticate a user — bs_auth","text":"v0.0.1 (2023-09-30)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_auth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Authenticate a user — bs_auth","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_auth(user = get_bluesky_user(), pass = get_bluesky_pass()) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of lists that belong to an actor. — bs_get_actor_lists","title":"Get a list of lists that belong to an actor. — bs_get_actor_lists","text":"Get list lists belong actor.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of lists that belong to an actor. — bs_get_actor_lists","text":"","code":"bs_get_actor_lists(   actor,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of lists that belong to an actor. — bs_get_actor_lists","text":"actor Character, length 1. name 1 actor, 'chriskenny.bsky.social' limit Integer. Maximum number request. Maximum: 100 user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of lists that belong to an actor. — bs_get_actor_lists","text":"tibble::tibble lists","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_lists.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get a list of lists that belong to an actor. — bs_get_actor_lists","text":"graph/getLists.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_lists.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get a list of lists that belong to an actor. — bs_get_actor_lists","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_lists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of lists that belong to an actor. — bs_get_actor_lists","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_actor_lists('chriskenny.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of actors suggested for following — bs_get_actor_suggestions","title":"Get a list of actors suggested for following — bs_get_actor_suggestions","text":"Get list actors suggested following","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of actors suggested for following — bs_get_actor_suggestions","text":"","code":"bs_get_actor_suggestions(   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_suggestions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of actors suggested for following — bs_get_actor_suggestions","text":"limit Integer. Maximum number request. Maximum: 100 user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_suggestions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of actors suggested for following — bs_get_actor_suggestions","text":"tibble::tibble suggested accounts follow","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_suggestions.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get a list of actors suggested for following — bs_get_actor_suggestions","text":"actor/getSuggestions.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_suggestions.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get a list of actors suggested for following — bs_get_actor_suggestions","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_actor_suggestions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of actors suggested for following — bs_get_actor_suggestions","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_get_actor_suggestions() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_author_feed.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve posts on an actor's feed — bs_get_author_feed","title":"Retrieve posts on an actor's feed — bs_get_author_feed","text":"Retrieve posts actor's feed","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_author_feed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve posts on an actor's feed — bs_get_author_feed","text":"","code":"bs_get_author_feed(   actor,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_author_feed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve posts on an actor's feed — bs_get_author_feed","text":"actor Character, length 1. name 1 actor, 'chriskenny.bsky.social' limit Integer. Maximum number request. Maximum: 100 user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_author_feed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve posts on an actor's feed — bs_get_author_feed","text":"tibble::tibble posts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_author_feed.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve posts on an actor's feed — bs_get_author_feed","text":"feed/getAuthorFeed.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_author_feed.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve posts on an actor's feed — bs_get_author_feed","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_author_feed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve posts on an actor's feed — bs_get_author_feed","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_author_feed('chriskenny.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocked_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a user's (self) muted lists — bs_get_blocked_lists","title":"Retrieve a user's (self) muted lists — bs_get_blocked_lists","text":"Retrieve user's (self) muted lists","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocked_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a user's (self) muted lists — bs_get_blocked_lists","text":"","code":"bs_get_blocked_lists(   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocked_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a user's (self) muted lists — bs_get_blocked_lists","text":"limit Integer. Maximum number request. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocked_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a user's (self) muted lists — bs_get_blocked_lists","text":"tibble::tibble actors","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocked_lists.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve a user's (self) muted lists — bs_get_blocked_lists","text":"graph/getListMutes.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocked_lists.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve a user's (self) muted lists — bs_get_blocked_lists","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocked_lists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a user's (self) muted lists — bs_get_blocked_lists","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_blocked_lists() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve user (self) blocks — bs_get_blocks","title":"Retrieve user (self) blocks — bs_get_blocks","text":"Retrieve user (self) blocks","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve user (self) blocks — bs_get_blocks","text":"","code":"bs_get_blocks(   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve user (self) blocks — bs_get_blocks","text":"limit Integer. Maximum number request. Maximum: 100 user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve user (self) blocks — bs_get_blocks","text":"tibble::tibble blocked accounts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocks.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve user (self) blocks — bs_get_blocks","text":"graph/getBlocks.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocks.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve user (self) blocks — bs_get_blocks","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_blocks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve user (self) blocks — bs_get_blocks","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_blocks() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed.html","id":null,"dir":"Reference","previous_headings":"","what":"Build feed from user's feed generator — bs_get_feed","title":"Build feed from user's feed generator — bs_get_feed","text":"Build feed user's feed generator","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build feed from user's feed generator — bs_get_feed","text":"","code":"bs_get_feed(   feed,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build feed from user's feed generator — bs_get_feed","text":"feed Character, length 1. Feed get. limit Integer. Maximum number request. Maximum: 100 user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build feed from user's feed generator — bs_get_feed","text":"tibble::tibble posts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Build feed from user's feed generator — bs_get_feed","text":"feed/getFeed.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Build feed from user's feed generator — bs_get_feed","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build feed from user's feed generator — bs_get_feed","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_feed('at://did:plc:z72i7hdynmk6r22z27h6tvur/app.bsky.feed.generator/bsky-team') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generator.html","id":null,"dir":"Reference","previous_headings":"","what":"Get specific information about one feed generator — bs_get_feed_generator","title":"Get specific information about one feed generator — bs_get_feed_generator","text":"Get specific information one feed generator","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get specific information about one feed generator — bs_get_feed_generator","text":"","code":"bs_get_feed_generator(   feed,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get specific information about one feed generator — bs_get_feed_generator","text":"feed Character, length 1. Feed get. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get specific information about one feed generator — bs_get_feed_generator","text":"tibble::tibble feeds","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generator.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get specific information about one feed generator — bs_get_feed_generator","text":"feed/getFeedGenerator.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generator.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get specific information about one feed generator — bs_get_feed_generator","text":"v0.0.1 (2023-10-01)","code":""},{"path":[]},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get specific information about one feed generator — bs_get_feed_generator","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_feed_generator('at://did:plc:z72i7hdynmk6r22z27h6tvur/app.bsky.feed.generator/bsky-team') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generators.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about a list of feed generators — bs_get_feed_generators","title":"Get information about a list of feed generators — bs_get_feed_generators","text":"Get information list feed generators","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about a list of feed generators — bs_get_feed_generators","text":"","code":"bs_get_feed_generators(   feeds,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about a list of feed generators — bs_get_feed_generators","text":"feeds Character. Vector feeds get. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information about a list of feed generators — bs_get_feed_generators","text":"tibble::tibble feeds","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generators.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get information about a list of feed generators — bs_get_feed_generators","text":"feed/getFeedGenerators.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generators.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get information about a list of feed generators — bs_get_feed_generators","text":"v0.0.1 (2023-10-01)","code":""},{"path":[]},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_generators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information about a list of feed generators — bs_get_feed_generators","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_feed_generators('at://did:plc:z72i7hdynmk6r22z27h6tvur/app.bsky.feed.generator/bsky-team') bs_get_feed_generators(c(   'at://did:plc:z72i7hdynmk6r22z27h6tvur/app.bsky.feed.generator/bsky-team',   'at://did:plc:z72i7hdynmk6r22z27h6tvur/app.bsky.feed.generator/whats-hot'   )) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of feed suggestions — bs_get_feed_suggestions","title":"Get a list of feed suggestions — bs_get_feed_suggestions","text":"Get list feed suggestions","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of feed suggestions — bs_get_feed_suggestions","text":"","code":"bs_get_feed_suggestions(   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_suggestions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of feed suggestions — bs_get_feed_suggestions","text":"limit Integer. Maximum number request. Maximum: 100 user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_suggestions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of feed suggestions — bs_get_feed_suggestions","text":"tibble::tibble suggested feeds","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_suggestions.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get a list of feed suggestions — bs_get_feed_suggestions","text":"feed/getSuggestedFeeds.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_suggestions.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get a list of feed suggestions — bs_get_feed_suggestions","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feed_suggestions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of feed suggestions — bs_get_feed_suggestions","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_get_feed_suggestions() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feeds.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a list of feeds created by a given actor — bs_get_feeds","title":"Retrieve a list of feeds created by a given actor — bs_get_feeds","text":"Retrieve list feeds created given actor","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feeds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a list of feeds created by a given actor — bs_get_feeds","text":"","code":"bs_get_feeds(   actor,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feeds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a list of feeds created by a given actor — bs_get_feeds","text":"actor Character, length 1. name 1 actor, 'chriskenny.bsky.social' limit Integer. Maximum number request. Maximum: 100 user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feeds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a list of feeds created by a given actor — bs_get_feeds","text":"tibble::tibble feeds","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feeds.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve a list of feeds created by a given actor — bs_get_feeds","text":"feed/getActorFeeds.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feeds.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve a list of feeds created by a given actor — bs_get_feeds","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_feeds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a list of feeds created by a given actor — bs_get_feeds","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_feeds('chriskenny.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follow_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get suggested follows related to a given actor — bs_get_follow_suggestions","title":"Get suggested follows related to a given actor — bs_get_follow_suggestions","text":"Get suggested follows related given actor","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follow_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get suggested follows related to a given actor — bs_get_follow_suggestions","text":"","code":"bs_get_follow_suggestions(   actor,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follow_suggestions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get suggested follows related to a given actor — bs_get_follow_suggestions","text":"actor Character, length 1. name 1 actor, 'chriskenny.bsky.social' user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follow_suggestions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get suggested follows related to a given actor — bs_get_follow_suggestions","text":"tibble::tibble actors","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follow_suggestions.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get suggested follows related to a given actor — bs_get_follow_suggestions","text":"graph/getSuggestedFollowsByActor.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follow_suggestions.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get suggested follows related to a given actor — bs_get_follow_suggestions","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follow_suggestions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get suggested follows related to a given actor — bs_get_follow_suggestions","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_get_follow_suggestions('chriskenny.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_followers.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve an actor's followers — bs_get_followers","title":"Retrieve an actor's followers — bs_get_followers","text":"Retrieve actor's followers","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_followers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve an actor's followers — bs_get_followers","text":"","code":"bs_get_followers(   actor,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_followers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve an actor's followers — bs_get_followers","text":"actor Character, length 1. name 1 actor, 'chriskenny.bsky.social' limit Integer. Maximum number request. Maximum: 100 user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_followers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve an actor's followers — bs_get_followers","text":"tibble::tibble actors","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_followers.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve an actor's followers — bs_get_followers","text":"graph/getFollowers.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_followers.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve an actor's followers — bs_get_followers","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_followers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve an actor's followers — bs_get_followers","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_followers('chriskenny.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follows.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve an actor's follows — bs_get_follows","title":"Retrieve an actor's follows — bs_get_follows","text":"Retrieve actor's follows","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve an actor's follows — bs_get_follows","text":"","code":"bs_get_follows(   actor,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve an actor's follows — bs_get_follows","text":"actor Character, length 1. name 1 actor, 'chriskenny.bsky.social' limit Integer. Maximum number request. Maximum: 100 user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve an actor's follows — bs_get_follows","text":"tibble::tibble actors","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follows.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve an actor's follows — bs_get_follows","text":"graph/getFollows.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follows.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve an actor's follows — bs_get_follows","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_follows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve an actor's follows — bs_get_follows","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_follows('chriskenny.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_likes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve posts liked by an actor — bs_get_likes","title":"Retrieve posts liked by an actor — bs_get_likes","text":"Retrieve posts liked actor","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_likes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve posts liked by an actor — bs_get_likes","text":"","code":"bs_get_likes(   actor,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_likes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve posts liked by an actor — bs_get_likes","text":"actor Character, length 1. name 1 actor, 'chriskenny.bsky.social' limit Integer. Maximum number request. Maximum: 100 user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_likes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve posts liked by an actor — bs_get_likes","text":"tibble::tibble likes","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_likes.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve posts liked by an actor — bs_get_likes","text":"feed/getActorLikes.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_likes.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve posts liked by an actor — bs_get_likes","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_likes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve posts liked by an actor — bs_get_likes","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_likes('chriskenny.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_muted_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a user's (self) muted lists — bs_get_muted_lists","title":"Retrieve a user's (self) muted lists — bs_get_muted_lists","text":"Retrieve user's (self) muted lists","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_muted_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a user's (self) muted lists — bs_get_muted_lists","text":"","code":"bs_get_muted_lists(   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_muted_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a user's (self) muted lists — bs_get_muted_lists","text":"user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_muted_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a user's (self) muted lists — bs_get_muted_lists","text":"tibble::tibble actors","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_muted_lists.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve a user's (self) muted lists — bs_get_muted_lists","text":"graph/getListMutes.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_muted_lists.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve a user's (self) muted lists — bs_get_muted_lists","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_muted_lists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a user's (self) muted lists — bs_get_muted_lists","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_muted_lists() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_mutes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a user's (self) muted accounts — bs_get_mutes","title":"Retrieve a user's (self) muted accounts — bs_get_mutes","text":"Retrieve user's (self) muted accounts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_mutes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a user's (self) muted accounts — bs_get_mutes","text":"","code":"bs_get_mutes(   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_mutes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a user's (self) muted accounts — bs_get_mutes","text":"limit Integer. Maximum number request. Maximum: 100 user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_mutes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a user's (self) muted accounts — bs_get_mutes","text":"tibble::tibble actors","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_mutes.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve a user's (self) muted accounts — bs_get_mutes","text":"graph/getMutes.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_mutes.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve a user's (self) muted accounts — bs_get_mutes","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_mutes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a user's (self) muted accounts — bs_get_mutes","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_mutes() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notification_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the user's (self) number of unread notifications — bs_get_notification_count","title":"Get the user's (self) number of unread notifications — bs_get_notification_count","text":"Get user's (self) number unread notifications","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notification_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the user's (self) number of unread notifications — bs_get_notification_count","text":"","code":"bs_get_notification_count(   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notification_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the user's (self) number of unread notifications — bs_get_notification_count","text":"user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notification_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the user's (self) number of unread notifications — bs_get_notification_count","text":"tibble single column row count","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notification_count.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get the user's (self) number of unread notifications — bs_get_notification_count","text":"notification/getUnreadCount.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notification_count.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get the user's (self) number of unread notifications — bs_get_notification_count","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notification_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the user's (self) number of unread notifications — bs_get_notification_count","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_get_notification_count() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notifications.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the user's (self) notifications — bs_get_notifications","title":"Get the user's (self) notifications — bs_get_notifications","text":"Get user's (self) notifications","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notifications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the user's (self) notifications — bs_get_notifications","text":"","code":"bs_get_notifications(   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notifications.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the user's (self) notifications — bs_get_notifications","text":"limit Integer. Maximum number request. Maximum: 100 user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notifications.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the user's (self) notifications — bs_get_notifications","text":"tibble notifications","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notifications.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get the user's (self) notifications — bs_get_notifications","text":"notification/listNotifications.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notifications.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get the user's (self) notifications — bs_get_notifications","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_notifications.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the user's (self) notifications — bs_get_notifications","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_get_notifications() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_likes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve likes on a post — bs_get_post_likes","title":"Retrieve likes on a post — bs_get_post_likes","text":"Retrieve likes post","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_likes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve likes on a post — bs_get_post_likes","text":"","code":"bs_get_post_likes(   uri,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_likes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve likes on a post — bs_get_post_likes","text":"uri Character, length 1. URI post get. limit Integer. Maximum number request. Maximum: 100 user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_likes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve likes on a post — bs_get_post_likes","text":"tibble::tibble likes","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_likes.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve likes on a post — bs_get_post_likes","text":"feed/getLikes.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_likes.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve likes on a post — bs_get_post_likes","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_likes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve likes on a post — bs_get_post_likes","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_post_likes('at://did:plc:ic6zqvuw5ulmfpjiwnhsr2ns/app.bsky.feed.post/3k7qmjev5lr2s') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_thread.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve thread of posts — bs_get_post_thread","title":"Retrieve thread of posts — bs_get_post_thread","text":"Retrieve thread posts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_thread.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve thread of posts — bs_get_post_thread","text":"","code":"bs_get_post_thread(   uri,   depth = NULL,   parent_height = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_thread.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve thread of posts — bs_get_post_thread","text":"uri Character, length 1. URI post get. depth Integer. Maximum depth request. Maximum: 1000 parent_height Integer. Maximum parent height request. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_thread.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve thread of posts — bs_get_post_thread","text":"tibble::tibble posts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_thread.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve thread of posts — bs_get_post_thread","text":"feed/getPostThread.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_thread.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve thread of posts — bs_get_post_thread","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_post_thread.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve thread of posts — bs_get_post_thread","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_post_thread('at://did:plc:ic6zqvuw5ulmfpjiwnhsr2ns/app.bsky.feed.post/3k7qmjev5lr2s') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_posts.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve thread of posts — bs_get_posts","title":"Retrieve thread of posts — bs_get_posts","text":"Retrieve thread posts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_posts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve thread of posts — bs_get_posts","text":"","code":"bs_get_posts(   uris,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_posts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve thread of posts — bs_get_posts","text":"uris Character. Vector URIs posts get. user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_posts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve thread of posts — bs_get_posts","text":"tibble::tibble posts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_posts.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve thread of posts — bs_get_posts","text":"feed/getPostThread.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_posts.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve thread of posts — bs_get_posts","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_posts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve thread of posts — bs_get_posts","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_posts('at://did:plc:ic6zqvuw5ulmfpjiwnhsr2ns/app.bsky.feed.post/3k7qmjev5lr2s') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_preferences.html","id":null,"dir":"Reference","previous_headings":"","what":"Get (Self) Preferences — bs_get_preferences","title":"Get (Self) Preferences — bs_get_preferences","text":"Get (Self) Preferences","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_preferences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get (Self) Preferences — bs_get_preferences","text":"","code":"bs_get_preferences(   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_preferences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get (Self) Preferences — bs_get_preferences","text":"user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_preferences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get (Self) Preferences — bs_get_preferences","text":"tibble::tibble preferences","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_preferences.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get (Self) Preferences — bs_get_preferences","text":"actor/getPreferences.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_preferences.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get (Self) Preferences — bs_get_preferences","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_preferences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get (Self) Preferences — bs_get_preferences","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_preferences() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Profile for a Bluesky Social User — bs_get_profile","title":"Get Profile for a Bluesky Social User — bs_get_profile","text":"Get Profile Bluesky Social User","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Profile for a Bluesky Social User — bs_get_profile","text":"","code":"bs_get_profile(   actors,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Profile for a Bluesky Social User — bs_get_profile","text":"actors character vector actor(s), 'chriskenny.bsky.social' user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Profile for a Bluesky Social User — bs_get_profile","text":"tibble row actor","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_profile.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Get Profile for a Bluesky Social User — bs_get_profile","text":"actor/getProfiles.json (2023-10-01) actor/getProfile.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_profile.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Get Profile for a Bluesky Social User — bs_get_profile","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Profile for a Bluesky Social User — bs_get_profile","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_profile('chriskenny.bsky.social') bs_get_profile(actors = c('chriskenny.bsky.social', 'simko.bsky.social')) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_reposts.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve actors who reposted a post — bs_get_reposts","title":"Retrieve actors who reposted a post — bs_get_reposts","text":"Retrieve actors reposted post","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_reposts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve actors who reposted a post — bs_get_reposts","text":"","code":"bs_get_reposts(   uri,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_reposts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve actors who reposted a post — bs_get_reposts","text":"uri Character, length 1. URI post get. limit Integer. Maximum number request. Maximum: 100 user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_reposts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve actors who reposted a post — bs_get_reposts","text":"tibble::tibble actors","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_reposts.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve actors who reposted a post — bs_get_reposts","text":"feed/getRepostedBy.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_reposts.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve actors who reposted a post — bs_get_reposts","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_reposts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve actors who reposted a post — bs_get_reposts","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_reposts('at://did:plc:ic6zqvuw5ulmfpjiwnhsr2ns/app.bsky.feed.post/3kaa2gxjhzr2a') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the user's home timeline — bs_get_timeline","title":"Retrieve the user's home timeline — bs_get_timeline","text":"Retrieve user's home timeline","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the user's home timeline — bs_get_timeline","text":"","code":"bs_get_timeline(   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the user's home timeline — bs_get_timeline","text":"limit Integer. Maximum number request. Maximum: 100 user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_timeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the user's home timeline — bs_get_timeline","text":"tibble::tibble posts","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_timeline.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Retrieve the user's home timeline — bs_get_timeline","text":"feed/getTimeline.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_timeline.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Retrieve the user's home timeline — bs_get_timeline","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_get_timeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the user's home timeline — bs_get_timeline","text":"","code":"if (FALSE) { # has_bluesky_pass() && has_bluesky_user() bs_get_timeline() }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a post on Bluesky Social — bs_post","title":"Make a post on Bluesky Social — bs_post","text":"Note: function currently supports text posts. support planned version 0.1.0","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a post on Bluesky Social — bs_post","text":"","code":"bs_post(   text,   images,   images_alt,   langs,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a post on Bluesky Social — bs_post","text":"text text post images character vector paths images attach post images_alt character vector alt text images. Must length images used. langs character vector languages BCP-47 format user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a post on Bluesky Social — bs_post","text":"tibble::tibble post information","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_post.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Make a post on Bluesky Social — bs_post","text":"feed/post.json (2023-10-02) repo/createRecord.json (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_post.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Make a post on Bluesky Social — bs_post","text":"v0.0.1 (2023-10-02)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_post.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a post on Bluesky Social — bs_post","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_post('Test post from R CMD Check for r package `bskyr`') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_resolve_handle.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve a Handle to Decentralized Identifier (DID) — bs_resolve_handle","title":"Resolve a Handle to Decentralized Identifier (DID) — bs_resolve_handle","text":"Resolve Handle Decentralized Identifier ()","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_resolve_handle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve a Handle to Decentralized Identifier (DID) — bs_resolve_handle","text":"","code":"bs_resolve_handle(   handle,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_resolve_handle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve a Handle to Decentralized Identifier (DID) — bs_resolve_handle","text":"handle Character, length 1. Handle, 'chriskenny.bsky.social' user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_resolve_handle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve a Handle to Decentralized Identifier (DID) — bs_resolve_handle","text":"tibble::tibble decentralized identifier","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_resolve_handle.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Resolve a Handle to Decentralized Identifier (DID) — bs_resolve_handle","text":"identity/resolveHandle.json (2023-11-24)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_resolve_handle.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Resolve a Handle to Decentralized Identifier (DID) — bs_resolve_handle","text":"v0.1.0 (2023-11-24)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_resolve_handle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resolve a Handle to Decentralized Identifier (DID) — bs_resolve_handle","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_resolve_handle('chriskenny.bsky.social') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_actors.html","id":null,"dir":"Reference","previous_headings":"","what":"Find profiles matching search criteria — bs_search_actors","title":"Find profiles matching search criteria — bs_search_actors","text":"Find profiles matching search criteria","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_actors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find profiles matching search criteria — bs_search_actors","text":"","code":"bs_search_actors(   query,   typeahead = FALSE,   limit = NULL,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_actors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find profiles matching search criteria — bs_search_actors","text":"query character. search query, Lucene query syntax recommended typeahead = FALSE. typeahead logical. Use typeahead search? Default FALSE. limit Integer. Maximum number request. Maximum: 100 user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_actors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find profiles matching search criteria — bs_search_actors","text":"tibble::tibble suggested accounts follow","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_actors.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Find profiles matching search criteria — bs_search_actors","text":"actor/searchActors.json (2023-10-01) actor/searchActorsTypeahead.json (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_actors.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Find profiles matching search criteria — bs_search_actors","text":"v0.0.1 (2023-10-01)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_search_actors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find profiles matching search criteria — bs_search_actors","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() bs_search_actors('political science') }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_upload_blob.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload a blob to a repo — bs_upload_blob","title":"Upload a blob to a repo — bs_upload_blob","text":"Upload blob repo","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_upload_blob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload a blob to a repo — bs_upload_blob","text":"","code":"bs_upload_blob(   blob,   user = get_bluesky_user(),   pass = get_bluesky_pass(),   auth = bs_auth(user, pass),   clean = TRUE )"},{"path":"http://christophertkenny.com/bskyr/reference/bs_upload_blob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload a blob to a repo — bs_upload_blob","text":"blob files upload repo user Character. User name log . Defaults get_bluesky_user(). pass Character. App password log . Defaults get_bluesky_pass(). auth Authentication information. Defaults bs_auth(user, pass). clean Logical. output cleaned tibble? Default: TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_upload_blob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload a blob to a repo — bs_upload_blob","text":"tibble::tibble upload blob information","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_upload_blob.html","id":"lexicon-references","dir":"Reference","previous_headings":"","what":"Lexicon references","title":"Upload a blob to a repo — bs_upload_blob","text":"repo/uploadBlob.json (2023-11-24)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_upload_blob.html","id":"function-introduced","dir":"Reference","previous_headings":"","what":"Function introduced","title":"Upload a blob to a repo — bs_upload_blob","text":"v0.1.0 (2023-11-24)","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_upload_blob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload a blob to a repo — bs_upload_blob","text":"","code":"if (FALSE) { # has_bluesky_pass() & has_bluesky_user() fig <- fs::path_package('bskyr', 'man/figures/logo.png') bs_upload_blob(fig) }"},{"path":"http://christophertkenny.com/bskyr/reference/bs_uri_to_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Universal Resource Identifiers to Hypertext Transfer Protocol Secure URLs — bs_uri_to_url","title":"Convert Universal Resource Identifiers to Hypertext Transfer Protocol Secure URLs — bs_uri_to_url","text":"Convert Universal Resource Identifiers Hypertext Transfer Protocol Secure URLs","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_uri_to_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Universal Resource Identifiers to Hypertext Transfer Protocol Secure URLs — bs_uri_to_url","text":"","code":"bs_uri_to_url(uri)"},{"path":"http://christophertkenny.com/bskyr/reference/bs_uri_to_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Universal Resource Identifiers to Hypertext Transfer Protocol Secure URLs — bs_uri_to_url","text":"uri Character, length 1. URI post get.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_uri_to_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Universal Resource Identifiers to Hypertext Transfer Protocol Secure URLs — bs_uri_to_url","text":"character vector HTTPS URLs","code":""},{"path":"http://christophertkenny.com/bskyr/reference/bs_uri_to_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Universal Resource Identifiers to Hypertext Transfer Protocol Secure URLs — bs_uri_to_url","text":"","code":"bs_uri_to_url('at://did:plc:ic6zqvuw5ulmfpjiwnhsr2ns/app.bsky.feed.post/3k7qmjev5lr2s') #> [1] \"https://bsky.app/profile/did:plc:ic6zqvuw5ulmfpjiwnhsr2ns/post/3k7qmjev5lr2s\""},{"path":"http://christophertkenny.com/bskyr/reference/pass.html","id":null,"dir":"Reference","previous_headings":"","what":"Check or Get Bluesky App Password — pass","title":"Check or Get Bluesky App Password — pass","text":"Check Get Bluesky App Password","code":""},{"path":"http://christophertkenny.com/bskyr/reference/pass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check or Get Bluesky App Password — pass","text":"","code":"has_bluesky_pass()  get_bluesky_pass()  bs_get_pass()  bs_has_pass()"},{"path":"http://christophertkenny.com/bskyr/reference/pass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check or Get Bluesky App Password — pass","text":"logical , pass get","code":""},{"path":"http://christophertkenny.com/bskyr/reference/pass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check or Get Bluesky App Password — pass","text":"","code":"has_bluesky_pass() #> [1] FALSE"},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_pass.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Entry to Renviron — set_bluesky_pass","title":"Add Entry to Renviron — set_bluesky_pass","text":"Adds Bluesky App Password .Renviron.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_pass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Entry to Renviron — set_bluesky_pass","text":"","code":"set_bluesky_pass(pass, overwrite = FALSE, install = FALSE, r_env = NULL)  bs_set_pass(pass, overwrite = FALSE, install = FALSE, r_env = NULL)"},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_pass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Entry to Renviron — set_bluesky_pass","text":"pass Character. App Password add add. overwrite Defaults FALSE. Boolean. existing BLUESKY_APP_PASS Renviron overwritten? install Defaults FALSE. Boolean. added '~/.Renviron' file? r_env Path install install TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_pass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Entry to Renviron — set_bluesky_pass","text":"pass, invisibly","code":""},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_pass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Entry to Renviron — set_bluesky_pass","text":"","code":"example_env <- tempfile(fileext = '.Renviron') set_bluesky_pass('1234-1234-1234-1234', r_env = example_env) #> No password set when invalid test password is provided. # r_env should likely be: file.path(Sys.getenv('HOME'), '.Renviron')"},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds Bluesky User to .Renviron. — set_bluesky_user","title":"Adds Bluesky User to .Renviron. — set_bluesky_user","text":"Adds Bluesky User .Renviron.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds Bluesky User to .Renviron. — set_bluesky_user","text":"","code":"set_bluesky_user(user, overwrite = FALSE, install = FALSE, r_env = NULL)  bs_set_user(user, overwrite = FALSE, install = FALSE, r_env = NULL)"},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds Bluesky User to .Renviron. — set_bluesky_user","text":"user Character. User add add. overwrite Defaults FALSE. Boolean. existing BLUESKY_APP_USER Renviron overwritten? install Defaults FALSE. Boolean. added '~/.Renviron' file? r_env Path install install TRUE.","code":""},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds Bluesky User to .Renviron. — set_bluesky_user","text":"user, invisibly","code":""},{"path":"http://christophertkenny.com/bskyr/reference/set_bluesky_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds Bluesky User to .Renviron. — set_bluesky_user","text":"","code":"example_env <- tempfile(fileext = '.Renviron') set_bluesky_user('CRAN_EXAMPLE.bsky.social', r_env = example_env) #> No username set when invalid test username is provided. # r_env should likely be: file.path(Sys.getenv('HOME'), '.Renviron')"},{"path":"http://christophertkenny.com/bskyr/reference/user.html","id":null,"dir":"Reference","previous_headings":"","what":"Check or Get Bluesky User — user","title":"Check or Get Bluesky User — user","text":"Check Get Bluesky User","code":""},{"path":"http://christophertkenny.com/bskyr/reference/user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check or Get Bluesky User — user","text":"","code":"has_bluesky_user()  get_bluesky_user()  bs_get_user()  bs_has_user()"},{"path":"http://christophertkenny.com/bskyr/reference/user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check or Get Bluesky User — user","text":"logical , user get","code":""},{"path":"http://christophertkenny.com/bskyr/reference/user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check or Get Bluesky User — user","text":"","code":"has_bluesky_user() #> [1] FALSE"},{"path":"http://christophertkenny.com/bskyr/news/index.html","id":"bskyr-010","dir":"Changelog","previous_headings":"","what":"bskyr 0.1.0","title":"bskyr 0.1.0","text":"Language posts can specified langs argument. Images can specified images argument. Alt text images can specified images_alt argument. Adds support direct blob uploads bs_upload_blob(). powers ability add media posts. Adds bs_uri_to_url() formats given uri HTTPS URL. Adds bs_resolve_handle() convert handles decentralized identifiers (DIDs).","code":""},{"path":"http://christophertkenny.com/bskyr/news/index.html","id":"bskyr-005","dir":"Changelog","previous_headings":"","what":"bskyr 0.0.5","title":"bskyr 0.0.5","text":"Fixes testing issues CRAN token available. Adds clean argument decide response cleaned tibble returning. FALSE, receive json list. Adds support changing limits number results returned.","code":""},{"path":"http://christophertkenny.com/bskyr/news/index.html","id":"bskyr-001","dir":"Changelog","previous_headings":"","what":"bskyr 0.0.1","title":"bskyr 0.0.1","text":"Initial package version, implementing features accessing details actors (user profiles), making posts, . Implements testing testthat httptest2. Limited posting abilities, initial version focused collecting data creating data.","code":""}]
